РегистрНакопленияРасчетыСПокупателямиTemp:
LOAD
    *
FROM [lib://$(vSpace):DataFiles/$(vSpacePrefix)_$(vPrefix)_РегистрНакопленияРасчетыСПокупателями-*.qvd]
(qvd);

РегистрНакопленияРасчетыСПокупателямиPre:
LOAD
    Date(DayStart(AddYears([Период],-2000)),'DD/MM/YYYY') as [პერიოდი],
	[ორგანიზაცია] as [ორგანიზაცია],
	[კონტრაგენტი] as [კონტრაგენტი],
	[ხელშეკრულება] as [ხელშეკრულება],
	[დოკუმენტი] as [დოკუმენტი],
	AutoNumberHash128([ორგანიზაცია], [კონტრაგენტი], [ხელშეკრულება],[დოკუმენტი]) as [ნაშთების ჭრილი],
    Sum(If([ВидДвижения] = 1, -1, 1) * [თანხა]) AS [თანხა],
    Sum(If([ВидДвижения] = 1, 0, 1) * [თანხა]) AS [გაყიდვები],
    Sum(If([ВидДвижения] = 1, 1, 0) * [თანხა]) AS [გადახდები]
Resident РегистрНакопленияРасчетыСПокупателямиTemp
Where	
	floor(AddYears([Период],-2000)) <= floor(now())
	and match ([დოკუმენტი_TYPE],'ДокументРасходнаяНакладная','ДокументПередачаВА')	
Group By 
	Date(DayStart(AddYears([Период],-2000)),'DD/MM/YYYY'),
	[ორგანიზაცია],
	[კონტრაგენტი],
	[ხელშეკრულება],
	[დოკუმენტი];

Drop Table РегистрНакопленияРасчетыСПокупателямиTemp;

РегистрНакопленияРасчетыСПокупателямиВысчетОстатковTemp:
LOAD
	RowNo() as [RowNo],
	[პერიოდი] as [პერიოდი],
	[ორგანიზაცია] as [ორგანიზაცია],
	[კონტრაგენტი] as [კონტრაგენტი],
	[ხელშეკრულება] as [ხელშეკრულება],
	[დოკუმენტი] as [დოკუმენტი],
	AutoNumberHash128([ორგანიზაცია], [კონტრაგენტი], [ხელშეკრულება],[დოკუმენტი]) as [ნაშთების ჭრილი],
    if([ნაშთების ჭრილი]=peek([ნაშთების ჭრილი]), [თანხა]+peek([თანხა ნაშთი]), [თანხა]) AS [თანხა ნაშთი]
Resident РегистрНакопленияРасчетыСПокупателямиPre
Order By
	[ნაშთების ჭრილი],
    [პერიოდი] asc;

РегистрНакопленияРасчетыСПокупателямиВысчетОстатков:
LOAD
	[პერიოდი] as [პერიოდი],
	[ორგანიზაცია] as [ორგანიზაცია],
	[კონტრაგენტი] as [კონტრაგენტი],
	[ხელშეკრულება] as [ხელშეკრულება],
	[დოკუმენტი] as [დოკუმენტი],
	[ნაშთების ჭრილი] as [ნაშთების ჭრილი],
    [თანხა ნაშთი] AS [თანხა ნაშთი],
    [პერიოდი] as [ინტერვალის დაწყების თარიღი],
    if([ნაშთების ჭრილი]=peek([ნაშთების ჭრილი]), date(peek([პერიოდი])-1,'DD/MM/YYYY'), IF(Round([თანხა ნაშთი]) = 0, [პერიოდი], $(vNow))) as [ინტერვალის დასრულების თარიღი],
    date([პერიოდი],'YYYY/MM/DD') & '|' & date(if([ნაშთების ჭრილი]=peek([ნაშთების ჭრილი]), date(peek([პერიოდი])-1,'DD/MM/YYYY'), IF(Round([თანხა ნაშთი]) = 0, [პერიოდი], date($(vNow)))),'YYYY/MM/DD') as [ინტერვალი],
    AutoNumber(date([პერიოდი],'YYYY/MM/DD') & '|' & date(if([ნაშთების ჭრილი]=peek([ნაშთების ჭრილი]), date(peek([პერიოდი])-1,'DD/MM/YYYY'), IF(Round([თანხა ნაშთი]) = 0, [პერიოდი], date($(vNow)))),'YYYY/MM/DD')) as [ინტერვალის იდენტიფიკატორი]
Resident РегистрНакопленияРасчетыСПокупателямиВысчетОстатковTemp
Order By
	[RowNo] desc;
    
drop table РегистрНакопленияРасчетыСПокупателямиВысчетОстатковTemp;    





////////////////////// Interval Match /////////////////////////////

Интервалы:
LOAD Distinct
  [ინტერვალის დაწყების თარიღი] AS [ინტერვალის დაწყების თარიღი],
  [ინტერვალის დასრულების თარიღი] AS [ინტერვალის დასრულების თარიღი]
Resident РегистрНакопленияРасчетыСПокупателямиВысчетОстатков;


ДатыНачалаИОкончанияИнтервалов:
Load
	Min([ინტერვალის დაწყების თარიღი]) as MinDate,
    Max([ინტერვალის დასრულების თარიღი]) as MaxDate
Resident Интервалы;

let vMinDate = peek('MinDate',0,'ДатыНачалаИОкончанияИнтервалов') ;
let vMaxDate = peek('MaxDate',0,'ДатыНачалаИОкончанияИнтервалов') ;

drop table ДатыНачалаИОкончанияИнтервалов;

NoConcatenate
ДниИнтервалов:
Load
	$(vMinDate) + RowNo() - 1 as [ინტერვალის დღე]
AutoGenerate ($(vMaxDate) - $(vMinDate)+1);


Inner Join IntervalMatch ([ინტერვალის დღე])
Load Distinct 
  [ინტერვალის დაწყების თარიღი],
  [ინტერვალის დასრულების თარიღი]
Resident Интервалы;

drop table Интервалы;

Left Join(РегистрНакопленияРасчетыСПокупателямиВысчетОстатков)
Load Distinct
  AutoNumber(date([ინტერვალის დაწყების თარიღი],'YYYY/MM/DD')&'|'&date([ინტერვალის დასრულების თარიღი],'YYYY/MM/DD')) as [ინტერვალის იდენტიფიკატორი],
  //if(floor(START_DATE)= floor(dd),1,0) as isSD_IC,
  [ინტერვალის დღე] as [ინტერვალის დღე]
Resident ДниИнтервалов;

drop table ДниИнтервалов;





РегистрНакопленияРасчетыСПокупателями:
LOAD
	floor([ინტერვალის დღე]) AS DebitorsDate,
    [ნაშთების ჭრილი],
	[ორგანიზაცია] & '|' & [კონტრაგენტი] & '|' & floor([ინტერვალის დღე]) & '|' & 0 as [ორგანიზაცია_კონტრაგენტი_პერიოდი_ნაშთია],
    0 as [ნაშთია (ანგარიშსწორებები მყიდველებთან)],
	[ინტერვალის დღე] AS [პერიოდი (ანგარიშსწორებები მყიდველებთან)],
    [ინტერვალის დაწყების თარიღი],
    [ინტერვალის დასრულების თარიღი],
    [ინტერვალის იდენტიფიკატორი],
    [ინტერვალი],
	[ორგანიზაცია] AS [%lnk_ორგანიზაცია (ანგარიშსწორებები მყიდველებთან)], //Type: СправочникОрганизации,
	ApplyMap('MapСправочникОрганизации',[ორგანიზაცია],Null()) AS [ორგანიზაცია (ანგარიშსწორებები მყიდველებთან)],
	[კონტრაგენტი] AS [%lnk_კონტრაგენტი (ანგარიშსწორებები მყიდველებთან)], //Type: СправочникКонтрагенты,
	[ხელშეკრულება] AS [%lnk_ხელშეკრულება (ანგარიშსწორებები მყიდველებთან)], //Type: СправочникКонтрагенты,
	// ApplyMap('MapСправочникКонтрагенты',[კონტრაგენტი],'') AS [კონტრაგენტი (ანგარიშსწორებები მყიდველებთან)],	
	//ApplyMap('MapСправочникКонтрагентыДополнительныеРеквизитыInternal',[კონტრაგენტი],'არა') AS [შიდა კონტრაგენტი (ანგარიშსწორებები მყიდველებთან)],
	ApplyMap('MapСрокОплатыПокупателя',[ხელშეკრულება],0) AS [მყიდველის გადახდის ვადა (ანგარიშსწორებები მყიდველებთან)], //Type: СправочникДоговорыКонтрагентов,
	[დოკუმენტი] AS [%lnk_დოკუმენტი (ანგარიშსწორებები მყიდველებთან)], //Type: ДокументПередачаВА,ДокументРасходнаяНакладная,ДокументОтчетКомиссионера,ДокументПриходнаяНакладная,ДокументАктВыполненныхРабот,ДокументОтчетОПереработке,ДокументПоступлениеВКассу,ДокументЗаказПокупателя,ДокументПриемИПередачаВРемонт,ДокументВзаимозачет,ДокументПоступлениеНаСчет,ДокументОперацияПоПлатежнымКартам,
	ApplyMap('MapДокументРасчетыСПокупателем',[დოკუმენტი],$(vNow)) AS [დოკუმენტის თარიღი (ანგარიშსწორებები მყიდველებთან)],
	ApplyMap('MapТипЗадолженностиДокумента',[დოკუმენტი],'არ არის შევსებული') AS [დავალიანების ტიპი (ანგარიშსწორებები მყიდველებთან)],	
	if((floor([ინტერვალის დღე]) - date(ApplyMap('MapДокументРасчетыСПокупателем',[დოკუმენტი],$(vNow)) + ApplyMap('MapСрокОплатыПокупателя',[ხელშეკრულება],0)))<0,0,(floor([ინტერვალის დღე]) - date(ApplyMap('MapДокументРасчетыСПокупателем',[დოკუმენტი],$(vNow)) + ApplyMap('MapСрокОплатыПокупателя',[ხელშეკრულება],0)))) as [ვადაგადაცილება კონსიგნაციით (ანგარიშსწორებები მყიდველებთან)],
	if((floor([ინტერვალის დღე]) - date(ApplyMap('MapДокументРасчетыСПокупателем',[დოკუმენტი],$(vNow))))<0,0,(floor([ინტერვალის დღე]) - date(ApplyMap('MapДокументРасчетыСПокупателем',[დოკუმენტი],$(vNow))))) as [ვადაგადაცილება (ანგარიშსწორებები მყიდველებთან)],
	[თანხა ნაშთი] AS [თანხა (ანგარიშსწორებები მყიდველებთან, ნაშთი)]
Resident РегистрНакопленияРасчетыСПокупателямиВысчетОстатков;
    
Drop Table РегистрНакопленияРасчетыСПокупателямиВысчетОстатков;

Concatenate(РегистрНакопленияРасчетыСПокупателями)
LOAD
	floor([პერიოდი]) AS DebitorsDate,
	[ორგანიზაცია] & '|' & [კონტრაგენტი] & '|' & floor([პერიოდი]) & '|' & 0 as [ორგანიზაცია_კონტრაგენტი_პერიოდი_ნაშთია],
    0 as [ნაშთია (ანგარიშსწორებები მყიდველებთან)],
	[პერიოდი] AS [პერიოდი (ანგარიშსწორებები მყიდველებთან)],
	[ორგანიზაცია] AS [%lnk_ორგანიზაცია (ანგარიშსწორებები მყიდველებთან)], //Type: СправочникОрганизации,
	ApplyMap('MapСправочникОрганизации',[ორგანიზაცია],Null()) AS [ორგანიზაცია (ანგარიშსწორებები მყიდველებთან)],
	[კონტრაგენტი] AS [%lnk_კონტრაგენტი (ანგარიშსწორებები მყიდველებთან)], //Type: СправочникКонтрагенты,
    [ხელშეკრულება] AS [%lnk_ხელშეკრულება (ანგარიშსწორებები მყიდველებთან)], //Type: СправочникКонтрагенты,
	// ApplyMap('MapСправочникКонтрагенты',[კონტრაგენტი],'') AS [კონტრაგენტი (ანგარიშსწორებები მყიდველებთან)],	
	//ApplyMap('MapСправочникКонтрагентыДополнительныеРеквизитыInternal',[კონტრაგენტი],'არა') AS [შიდა კონტრაგენტი (ანგარიშსწორებები მყიდველებთან)],
	ApplyMap('MapСрокОплатыПокупателя',[ხელშეკრულება],0) AS [მყიდველის გადახდის ვადა (ანგარიშსწორებები მყიდველებთან)], //Type: СправочникДоговорыКонтрагентов,
	[დოკუმენტი] AS [%lnk_დოკუმენტი (ანგარიშსწორებები მყიდველებთან)], //Type: ДокументПередачаВА,ДокументРасходнаяНакладная,ДокументОтчетКомиссионера,ДокументПриходнаяНакладная,ДокументАктВыполненныхРабот,ДокументОтчетОПереработке,ДокументПоступлениеВКассу,ДокументЗаказПокупателя,ДокументПриемИПередачаВРемонт,ДокументВзаимозачет,ДокументПоступлениеНаСчет,ДокументОперацияПоПлатежнымКартам,
	ApplyMap('MapДокументРасчетыСПокупателем',[დოკუმენტი],$(vNow)) AS [დოკუმენტის თარიღი (ანგარიშსწორებები მყიდველებთან)],
	ApplyMap('MapТипЗадолженностиДокумента',[დოკუმენტი],'არ არის შევსებული') AS [დავალიანების ტიპი (ანგარიშსწორებები მყიდველებთან)],	
	[გაყიდვები] AS [გაყიდვები (ანგარიშსწორებები მყიდველებთან)],
	[გადახდები] AS [გადახდები (ანგარიშსწორებები მყიდველებთან)]
Resident РегистрНакопленияРасчетыСПокупателямиPre;

Drop Table РегистрНакопленияРасчетыСПокупателямиPre;
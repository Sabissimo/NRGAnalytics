ТипЗапасыTMP:
LOAD * Inline [
'აღრიცხვის ანგარიშის ტიპიTemp'
'მარაგები'
];

РегистрНакопленияЗапасыPre:
LOAD
    *
FROM [lib://$(vSpace):DataFiles/Elvare_$(vPrefix)_РегистрНакопленияЗапасы-*.qvd]
(qvd);

РегистрНакопленияЗапасы:
LOAD
	floor(Date(AddYears([Период],-2000),'DD/MM/YYYY HH:mm:ss')) AS StockDate,
	[ორგანიზაცია] & '|' & floor(Date(AddYears([Период],-2000),'DD/MM/YYYY HH:mm:ss')) & '|' & 1 as [ორგანიზაცია_პერიოდი_ნაშთია],
    1 as [ნაშთია (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	Date(AddYears([Период],-2000),'DD/MM/YYYY HH:mm:ss') AS [პერიოდი (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	[Регистратор] AS [%lnk_რეგისტრატორი (მარაგები და დანახარჯები,დაგრ. რეგისტრი)], //Type: ДокументКорректировкаРегистров,ДокументПередачаВА,ДокументКорректировкаРеализации,ДокументРасходнаяНакладная,ДокументОтчетКомиссионера,ДокументКРОНТО_ЗачетДолга,ДокументПриходнаяНакладная,ДокументАктВыполненныхРабот,ДокументРасходСоСчета,ДокументЧекККМ,ДокументОтчетОПереработке,ДокументПоступлениеВКассу,ДокументЗаказПокупателя,ДокументПриемИПередачаВРемонт,ДокументОтчетОРозничныхПродажах,ДокументРасходИзКассы,ДокументВзаимозачет,ДокументЗакрытиеМесяца,ДокументПредварительныйЗаказПокупателя,ДокументПоступлениеНаСчет,ДокументВводНачальныхОстатков,ДокументОперацияПоПлатежнымКартам,
	[ВидДвижения] AS [მოძრაობის ტიპი (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	[ორგანიზაცია] AS [%lnk_ორგანიზაცია (მარაგები და დანახარჯები,დაგრ. რეგისტრი)], //Type: СправочникОрганизации,
	ApplyMap('MapСправочникОрганизации',[ორგანიზაცია],Null()) AS [ორგანიზაცია (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	[სტრუქტურული ერთეული] AS [%lnk_სტრუქტურული ერთეული (მარაგები და დანახარჯები,დაგრ. რეგისტრი)], //Type: СправочникСтруктурныеЕдиницы,СправочникКонтрагенты,
	IF([სტრუქტურული ერთეული_TYPE] = 'СправочникСтруктурныеЕдиницы', ApplyMap('MapСправочникСтруктурныеЕдиницы',[სტრუქტურული ერთეული],Null()),
		IF([სტრუქტურული ერთეული_TYPE] = 'СправочникКонтрагенты', ApplyMap('MapСправочникКонтрагенты',[სტრუქტურული ერთეული],Null()),
		[სტრუქტურული ერთეული])) AS [სტრუქტურული ერთეული (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	[აღრიცხვის ანგარიში] AS [%lnk_აღრიცხვის ანგარიში (მარაგები და დანახარჯები,დაგრ. რეგისტრი)], //Type: ПланСчетовУправленческий,
	ApplyMap('MapПланСчетовУправленческий',[აღრიცხვის ანგარიში],Null()) AS [აღრიცხვის ანგარიში (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	[ნომენკლატურა] AS [%lnk_ნომენკლატურა (მარაგები და დანახარჯები,დაგრ. რეგისტრი)], //Type: СправочникНоменклатура,
	ApplyMap('MapСправочникНоменклатура',[ნომენკლატურა],Null()) AS [ნომენკლატურა (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	[მახასიათებელი] AS [%lnk_მახასიათებელი (მარაგები და დანახარჯები,დაგრ. რეგისტრი)], //Type: СправочникХарактеристикиНоменклатуры,
	ApplyMap('MapСправочникХарактеристикиНоменклатуры',[მახასიათებელი],Null()) AS [მახასიათებელი (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	[პარტია] AS [%lnk_პარტია (მარაგები და დანახარჯები,დაგრ. რეგისტრი)], //Type: СправочникПартииНоменклатуры,
	ApplyMap('MapСправочникПартииНоменклатуры',[პარტია],Null()) AS [პარტია (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	[მყიდველის შეკვეთა] AS [%lnk_მყიდველის შეკვეთა (მარაგები და დანახარჯები,დაგრ. რეგისტრი)], //Type: ДокументЗаказПокупателя,
	Null() AS [რაოდენობა (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	Null() AS [თანხა (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	If([ВидДвижения] = 1, -1, 1) * [რაოდენობა] AS [რაოდენობა (მარაგები და დანახარჯები,დაგრ. რეგისტრი, ნაშთი)],
	If([ВидДвижения] = 1, -1, 1) * [თანხა] AS [თანხა (მარაგები და დანახარჯები,დაგრ. რეგისტრი, ნაშთი)],
    ApplyMap('MapДокументыВнутреннихДвижений', [Регистратор], 0) AS [შიდა ტრანზაქციები (მარაგები და დანახარჯები,დაგრ. რეგისტრი)]
Resident РегистрНакопленияЗапасыPre
WHERE Exists([აღრიცხვის ანგარიშის ტიპიTemp],ApplyMap('MapПланСчетовУправленческийТипСчета',[აღრიცხვის ანგარიში],Null()));

РегистрНакопленияЗапасы:
LOAD
	floor(Date(AddYears([Период],-2000),'DD/MM/YYYY HH:mm:ss')) AS StockDate,
	[ორგანიზაცია] & '|' & floor(Date(AddYears([Период],-2000),'DD/MM/YYYY HH:mm:ss')) & '|' & 0 as [ორგანიზაცია_პერიოდი_ნაშთია],
	0 as [ნაშთია (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	Date(AddYears([Период],-2000),'DD/MM/YYYY HH:mm:ss') AS [პერიოდი (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	[Регистратор] AS [%lnk_რეგისტრატორი (მარაგები და დანახარჯები,დაგრ. რეგისტრი)], //Type: ДокументКорректировкаРегистров,ДокументПередачаВА,ДокументКорректировкаРеализации,ДокументРасходнаяНакладная,ДокументОтчетКомиссионера,ДокументКРОНТО_ЗачетДолга,ДокументПриходнаяНакладная,ДокументАктВыполненныхРабот,ДокументРасходСоСчета,ДокументЧекККМ,ДокументОтчетОПереработке,ДокументПоступлениеВКассу,ДокументЗаказПокупателя,ДокументПриемИПередачаВРемонт,ДокументОтчетОРозничныхПродажах,ДокументРасходИзКассы,ДокументВзаимозачет,ДокументЗакрытиеМесяца,ДокументПредварительныйЗаказПокупателя,ДокументПоступлениеНаСчет,ДокументВводНачальныхОстатков,ДокументОперацияПоПлатежнымКартам,
	[ВидДвижения] AS [მოძრაობის ტიპი (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	[ორგანიზაცია] AS [%lnk_ორგანიზაცია (მარაგები და დანახარჯები,დაგრ. რეგისტრი)], //Type: СправочникОрганизации,
	ApplyMap('MapСправочникОрганизации',[ორგანიზაცია],Null()) AS [ორგანიზაცია (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	[სტრუქტურული ერთეული] AS [%lnk_სტრუქტურული ერთეული (მარაგები და დანახარჯები,დაგრ. რეგისტრი)], //Type: СправочникСтруктурныеЕдиницы,СправочникКонтрагенты,
	IF([სტრუქტურული ერთეული_TYPE] = 'СправочникСтруктурныеЕдиницы', ApplyMap('MapСправочникСтруктурныеЕдиницы',[სტრუქტურული ერთეული],Null()),
		IF([სტრუქტურული ერთეული_TYPE] = 'СправочникКонтрагенты', ApplyMap('MapСправочникКонтрагенты',[სტრუქტურული ერთეული],Null()),
		[სტრუქტურული ერთეული])) AS [სტრუქტურული ერთეული (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	[აღრიცხვის ანგარიში] AS [%lnk_აღრიცხვის ანგარიში (მარაგები და დანახარჯები,დაგრ. რეგისტრი)], //Type: ПланСчетовУправленческий,
	ApplyMap('MapПланСчетовУправленческий',[აღრიცხვის ანგარიში],Null()) AS [აღრიცხვის ანგარიში (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	[ნომენკლატურა] AS [%lnk_ნომენკლატურა (მარაგები და დანახარჯები,დაგრ. რეგისტრი)], //Type: СправочникНоменклатура,
	ApplyMap('MapСправочникНоменклатура',[ნომენკლატურა],Null()) AS [ნომენკლატურა (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	[მახასიათებელი] AS [%lnk_მახასიათებელი (მარაგები და დანახარჯები,დაგრ. რეგისტრი)], //Type: СправочникХарактеристикиНоменклатуры,
	ApplyMap('MapСправочникХарактеристикиНоменклатуры',[მახასიათებელი],Null()) AS [მახასიათებელი (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	[პარტია] AS [%lnk_პარტია (მარაგები და დანახარჯები,დაგრ. რეგისტრი)], //Type: СправочникПартииНоменклатуры,
	ApplyMap('MapСправочникПартииНоменклатуры',[პარტია],Null()) AS [პარტია (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	[მყიდველის შეკვეთა] AS [%lnk_მყიდველის შეკვეთა (მარაგები და დანახარჯები,დაგრ. რეგისტრი)], //Type: ДокументЗаказПокупателя,
	If([ВидДвижения] = 1, -1, 1) * [რაოდენობა] AS [რაოდენობა (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	If([ВидДвижения] = 1, -1, 1) * [თანხა] AS [თანხა (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
    Null() AS [რაოდენობა (მარაგები და დანახარჯები,დაგრ. რეგისტრი, ნაშთი)],
    Null() AS [თანხა (მარაგები და დანახარჯები,დაგრ. რეგისტრი, ნაშთი)],
    ApplyMap('MapДокументыВнутреннихДвижений', [Регистратор], 0) AS [შიდა ტრანზაქციები (მარაგები და დანახარჯები,დაგრ. რეგისტრი)]
Resident РегистрНакопленияЗапасыPre
WHERE Exists([აღრიცხვის ანგარიშის ტიპიTemp],ApplyMap('MapПланСчетовУправленческийТипСчета',[აღრიცხვის ანგარიში],Null()));

Drop Table РегистрНакопленияЗапасыPre;

Drop Table ТипЗапасыTMP;

СправочникНоменклатура:
LOAD
	[მინიშნება] AS [%lnk_ნომენკლატურა (მარაგები და დანახარჯები,დაგრ. რეგისტრი)], //Type: СправочникНоменклатура,
	[ჯგუფში] AS [%lnk_ჯგუფში (ნომენკლატურა,ცნობარი)], //Type: СправочникНоменклатура,
	ApplyMap('MapСправочникНоменклатура',[ჯგუფში],'') AS [ჯგუფში (ნომენკლატურა,ცნობარი)],
	[დასახელება] AS [დასახელება (ნომენკლატურა,ცნობარი)],
	[კატეგორია] AS [%lnk_კატეგორია (ნომენკლატურა,ცნობარი)], //Type: СправочникКатегорииНоменклатуры,
	ApplyMap('MapСправочникКатегорииНоменклатуры',[კატეგორია],'') AS [კატეგორია (ნომენკლატურა,ცნობარი)],
	[წარმომავლობა] AS [%lnk_წარმომავლობა (ნომენკლატურა,ცნობარი)], //Type: СправочникСправочники_НРГ,
	ApplyMap('MapСправочникСправочники_НРГ',[წარმომავლობა],'') AS [წარმომავლობა (ნომენკლატურა,ცნობარი)],
	[ნომენკლატურის ტიპი ახალი] AS [%lnk_ნომენკლატურის ტიპი ახალი (ნომენკლატურა,ცნობარი)], //Type: СправочникТипыНоменклатуры,
	ApplyMap('MapСправочникТипыНоменклатуры',[ნომენკლატურის ტიპი ახალი],'') AS [ნომენკლატურის ტიპი ახალი (ნომენკლატურა,ცნობარი)],
	[ნომენკლატურის სახეობა] AS [%lnk_ნომენკლატურის სახეობა (ნომენკლატურა,ცნობარი)], //Type: СправочникВидыНоменклатур,
	ApplyMap('MapСправочникВидыНоменклатур',[ნომენკლატურის სახეობა],'') AS [ნომენკლატურის სახეობა (ნომენკლატურა,ცნობარი)];
LOAD
    *
FROM [lib://$(vSpace):DataFiles/Elvare_$(vPrefix)_СправочникНоменклатура.qvd]
(qvd);
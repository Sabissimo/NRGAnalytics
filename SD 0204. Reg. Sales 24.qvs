if(not IsPartialReload()) then

РегистрНакопленияПродажиPre:
LOAD
    *
FROM [lib://$(vSpace):DataFiles/$(vSpacePrefix)_$(vPrefix)_РегистрНакопленияПродажи-*.qvd]
(qvd);

РегистрНакопленияПродажиДляЗапасов:
LOAD
	floor(Date(DayStart(AddYears([Период],-2000)),'DD/MM/YYYY')) AS StockSalesDate,
	[ნომენკლატურა] & '|' & floor(Date(DayStart(AddYears([Период],-2000)),'DD/MM/YYYY')) & '|' & 0 as [ნომენკლატურა_პერიოდი_ნაშთია],
    0 as [ნაშთია (გაყიდვები, მარაგები)],
    Date(DayStart(AddYears([Период],-2000)),'DD/MM/YYYY') AS [პერიოდი (გაყიდვები, მარაგები)],
	[Регистратор] AS [%lnk_რეგისტრატორი (გაყიდვები, მარაგები)], //Type: ДокументКорректировкаРегистров,ДокументПередачаВА,ДокументКорректировкаРеализации,ДокументРасходнаяНакладная,ДокументОтчетКомиссионера,ДокументКРОНТО_ЗачетДолга,ДокументПриходнаяНакладная,ДокументАктВыполненныхРабот,ДокументРасходСоСчета,ДокументЧекККМ,ДокументОтчетОПереработке,ДокументПоступлениеВКассу,ДокументЗаказПокупателя,ДокументПриемИПередачаВРемонт,ДокументОтчетОРозничныхПродажах,ДокументРасходИзКассы,ДокументВзаимозачет,ДокументЗакрытиеМесяца,ДокументПредварительныйЗаказПокупателя,ДокументПоступлениеНаСчет,ДокументВводНачальныхОстатков,ДокументОперацияПоПлатежнымКартам,
	[დოკუმენტი] AS [%lnk_დოკუმენტი (გაყიდვები, მარაგები)], //Type: ДокументРасходнаяНакладная,ДокументОтчетКомиссионера,ДокументПриходнаяНакладная,ДокументАктВыполненныхРабот,ДокументЧекККМ,ДокументОтчетОПереработке,ДокументАвансовыйОтчет,ДокументЗаказПокупателя,ДокументОтчетОРозничныхПродажах,ДокументОтчетКомитенту,
	ApplyMap('MapДокументРасходнаяНакладнаяУчастникКэшбека',[დოკუმენტი],ApplyMap('MapСправочникКонтрагентыКонтрагентРодитель',[კონტრაგენტი],[კონტრაგენტი])) AS [%lnk_კონტრაგენტი (გაყიდვები, მარაგები)], //Type: СправочникКонтрагенты,
    ApplyMap('MapСправочникКонтрагенты',ApplyMap('MapДокументРасходнаяНакладнаяУчастникКэшбека',[დოკუმენტი],ApplyMap('MapСправочникКонтрагентыКонтрагентРодитель',[კონტრაგენტი],[კონტრაგენტი])),Null()) AS [კონტრაგენტი (გაყიდვები, მარაგები)],
    ApplyMap('MapСправочникКонтрагентыДополнительныеРеквизитыInternal',ApplyMap('MapДокументРасходнаяНакладнаяУчастникКэшбека',[დოკუმენტი],ApplyMap('MapСправочникКонтрагентыКонтрагентРодитель',[კონტრაგენტი],[კონტრაგენტი])),'არა') AS [Internal (კონტრაგენტები, მარაგები)],
    [ნომენკლატურა] AS [%lnk_ნომენკლატურა (გაყიდვები, მარაგები)], //Type: СправочникНоменклатура,
    ApplyMap('MapСправочникНоменклатура',[ნომენკლატურა],Null()) AS [ნომენკლატურა (გაყიდვები, მარაგები)],
    [რაოდენობა] AS [რაოდენობა (გაყიდვები, მარაგები)],
	[თანხა] - [მ.შ. დღგ] AS [თანხა (გაყიდვები, მარაგები)],
	[მ.შ. დღგ] AS [დღგ (გაყიდვები, მარაგები)],
	[თვითღირებულება] AS [თვითღირებულება (გაყიდვები, მარაგები)]
Resident РегистрНакопленияПродажиPre
where 
	floor(AddYears([Период],-2000)) <= $(vNow)	
	and match([ორგანიზაცია],
    '85070A94EF044E4711EB87F29D540806', // elvare
    '80C6382C4ABBB43711E7363EBFB98EBD', // electric
    '8653D4F5EF3EE94F11EED6FFAF64F778' // elcom
    ) > 0;

Drop Table РегистрНакопленияПродажиPre;

СезонностьPre:
SELECT [თვე],
	[სეზონურობა],
	[კოეფიციენტი]
FROM GetWorksheetV2
WITH PROPERTIES (
worksheetKey='1-f15L80uaVKbMAD786Bp5NHDQlr7IqxFHhQoIBosNWA:_1475883086',
gidOverride='',
generatedNumberedColumns='false',
skipRows=''
);

Сезонность:
LOAD [თვე] as [MONTH_NUM SD], 
	[სეზონურობა] as [სეზონურობა]
Resident СезонностьPre;

КоэффициентСезонности:
LOAD 
	[კოეფიციენტი] as [სეზონურობის კოეფიციენტი]
Resident СезонностьPre
WHERE
	[თვე] = num(month($(vNow)+7));

Drop Table СезонностьPre;

End If
LIB CONNECT TO 'Elvare:Google_Drive_&_Spreadsheets - george.sabanadze@doctra.ge';

СправочникКонтрагенты:
LOAD
	[მინიშნება] AS [%lnk_კონტრაგენტი (გაყიდვები)], //Type: СправочникВидыСчетовБаланса,
	[ჯგუფი] AS [%lnk_კონტრაგენტის ჯგუფი (გაყიდვები)], //Type: СправочникВидыСчетовБаланса,
	[(არ გამოიყენება)] AS [კონტრაგენტი (გაყიდვები)], //Type: СправочникВидыСчетовБаланса,
	[ეს არის ჯგუფი] AS [ეს არის ჯგუფი (გაყიდვები)];
LOAD
    *
FROM [lib://$(vSpace):DataFiles/Elvare_$(vPrefix)_СправочникКонтрагенты.qvd]
(qvd);

СправочникКонтрагентыИерархия:
Hierarchy(
	[%lnk_კონტრაგენტი (გაყიდვები)], 
	[%lnk_კონტრაგენტის ჯგუფი (გაყიდვები)], 
	[კონტრაგენტი (გაყიდვები)], 
	[კონტრაგენტის ჯგუფი (გაყიდვები)], 
	[კონტრაგენტი (გაყიდვები)], 
	[კონტრაგენტის ჯგუფების იერარქია (გაყიდვები)], 
	' > ', 
	[კონტრაგენტის ჯგუფის დონე (გაყიდვები)]
)
LOAD
    *
Resident СправочникКонтрагенты;

СправочникКонтрагентыОбратнаяИерархия:
HierarchyBelongsTo
(
    [%lnk_კონტრაგენტი (გაყიდვები)],
    ANCESTOR_ID,
    [კონტრაგენტი (ბიუჯეტისთვის)],         // store ancestor id
    '%lnk_კონტრაგენტის ჯგუფი (ბიუჯეტისთვის)',
    'კონტრაგენტის ჯგუფი (ბიუჯეტისთვის)'
)
LOAD
    [%lnk_კონტრაგენტი (გაყიდვები)] as [%lnk_კონტრაგენტი (გაყიდვები)],
    [%lnk_კონტრაგენტის ჯგუფი (გაყიდვები)] as ANCESTOR_ID,
    [კონტრაგენტი (გაყიდვები)] as [კონტრაგენტი (ბიუჯეტისთვის)]
RESIDENT СправочникКонтрагенты;

SalesAccess:
LOAD 
	Role as [Sales Access Role],
	Upper(Email) as [Sales Access Email], 
	Group as [Sales Access Group];
SELECT Role,
	Email,
	Group
FROM GetWorksheetV2
WITH PROPERTIES (
worksheetKey='1khHxo_6tF2-fj0BWu77QLWC9ODRZOnw4DMteglpaYZc:_1769114916',
gidOverride='',
generatedNumberedColumns='false',
skipRows=''
);

INNER JOIN (СправочникКонтрагентыОбратнаяИерархия)          // add USER_EMAIL to the bridge
LOAD
	[Sales Access Role],
    [Sales Access Group]   AS [კონტრაგენტის ჯგუფი (ბიუჯეტისთვის)],
    [Sales Access Email]
RESIDENT SalesAccess;

UserDescendants:
NOCONCATENATE
LOAD DISTINCT
	[Sales Access Role],
    [Sales Access Email],
    [%lnk_კონტრაგენტი (გაყიდვები)]                    // descendant the user may see
RESIDENT СправочникКонтрагентыОбратнаяИерархия
WHERE Len([Sales Access Email]) and [Sales Access Role] = 'USER'; 

SalesAccessAdmin:
LOAD
	[Sales Access Role],
    [Sales Access Email]
RESIDENT SalesAccess
WHERE [Sales Access Role] = 'ADMIN';

Left Join(SalesAccessAdmin)
Load 
	[%lnk_კონტრაგენტი (გაყიდვები)]
Resident СправочникКонтрагенты;


SECTION ACCESS;
SA:
LOAD
    [Sales Access Role] AS ACCESS,
    [Sales Access Email] AS [USER.EMAIL],
    [%lnk_კონტრაგენტი (გაყიდვები)]
RESIDENT UserDescendants;

Concatenate(SA)
LOAD
	[Sales Access Role] AS ACCESS,
    [Sales Access Email] AS [USER.EMAIL],
    [%lnk_კონტრაგენტი (გაყიდვები)]
RESIDENT SalesAccessAdmin;

SECTION APPLICATION; 


//drop table СправочникКонтрагентыОбратнаяИерархия;

drop table СправочникКонтрагентыОбратнаяИерархия;

drop table SalesAccess;

drop table UserDescendants;

drop table SalesAccessAdmin;




СправочникКонтрагентыОбратнаяИерархия:
HierarchyBelongsTo
(
    [%lnk_კონტრაგენტი (გაყიდვები)],
    ANCESTOR_ID,
    [კონტრაგენტი (ბიუჯეტისთვის)],         // store ancestor id
    '%lnk_კონტრაგენტის ჯგუფი (ბიუჯეტისთვის)',
    'კონტრაგენტის ჯგუფი (ბიუჯეტისთვის)'
)
LOAD
    [%lnk_კონტრაგენტი (გაყიდვები)] as [%lnk_კონტრაგენტი (გაყიდვები)],
    [%lnk_კონტრაგენტის ჯგუფი (გაყიდვები)] as ANCESTOR_ID,
    [კონტრაგენტი (გაყიდვები)] as [კონტრაგენტი (ბიუჯეტისთვის)]
RESIDENT СправочникКонтрагенты
// WHERE 
// 	match ([ეს არის ჯგუფი (გაყიდვები)],'00')
;





drop table СправочникКонтрагенты;






PlanFromSheets:
Crosstable(Date, Value, 1)
LOAD *;

SELECT 
	*
FROM GetWorksheetV2
WITH PROPERTIES (
worksheetKey='1khHxo_6tF2-fj0BWu77QLWC9ODRZOnw4DMteglpaYZc:_2073598474',
gidOverride='',
generatedNumberedColumns='false',
skipRows=''
);

ПланПродажПоГруппам:
Load
	[Group] as [კონტრაგენტის ჯგუფი (ბიუჯეტისთვის)],
    [Date] as [დაგეგმვის პერიოდი],
	[Value] as [თანხა (გეგმა)]
Resident PlanFromSheets
where floor(Date#([Date], 'YYYY-MM-DD')) <= $(vNow)
and floor(Date#([Date], 'YYYY-MM-DD')) >= YearStart($(vNow))
;

drop table PlanFromSheets;

//exit script;
Let vNow = Floor(now());

РегистрБухгалтерииУправленческийPreNGM:
LOAD
    *
FROM [lib://$(vSpace):DataFiles/$(vSpacePrefix)_$(vPrefix)_РегистрБухгалтерииУправленческий-*.qvd]
(qvd);

РегистрБухгалтерииУправленческийPreNG:
Load 
	*,
	0 as [მოძრაობის ტიპი]
Resident РегистрБухгалтерииУправленческийPreNGM;

РегистрБухгалтерииУправленческийPreNG:
Load 
	*,
	1 as [მოძრაობის ტიპი]
Resident РегистрБухгалтерииУправленческийPreNGM;

Drop Table РегистрБухгалтерииУправленческийPreNGM;

РегистрБухгалтерииУправленческийPre:
Load
	monthstart(Date(AddYears([Период],-2000),'DD/MM/YYYY')) as [პერიოდი],
	[ორგანიზაცია], 
	if([მოძრაობის ტიპი] = 0, [ანგარიში დტ], [ანგარიში კტ]) as [ანგარიში],
    ApplyMap('MapЭтоФинансовоеЗакрытиеМесяца', [Регистратор], 'არა') as [ფინანსური შედეგის გაანგარიშება],
    sum(if([მოძრაობის ტიპი] = 0, 1, -1) * [თანხა]) as [თანხა],
	sum(if([მოძრაობის ტიპი] = 0, 1, 0) * [თანხა]) as [თანხა დტ],
	sum(if([მოძრაობის ტიპი] = 0, 0, 1) * [თანხა]) as [თანხა კტ]
Resident РегистрБухгалтерииУправленческийPreNG
Where	
	floor(AddYears([Период],-2000)) <= $(vNow)
Group by
	monthstart(Date(AddYears([Период],-2000),'DD/MM/YYYY')),
	[ორგანიზაცია], 
	if([მოძრაობის ტიპი] = 0, [ანგარიში დტ], [ანგარიში კტ]),
    ApplyMap('MapЭтоФинансовоеЗакрытиеМесяца', [Регистратор], 'არა');

Drop Table РегистрБухгалтерииУправленческийPreNG;

РегистрБухгалтерииУправленческий:
LOAD
	floor([პერიოდი]) AS AccountingDate,
	[ორგანიზაცია] & '|' & floor([პერიოდი]) & '|' & 0 as [ორგანიზაცია_პერიოდი_ნაშთია],
    [პერიოდი] AS [პერიოდი (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	0 AS [ნაშთია (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
    [ფინანსური შედეგის გაანგარიშება] as [ფინანსური შედეგის გაანგარიშებაა (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	[ანგარიში] AS [%lnk_ანგარიში (გატარებების ჟურნალი,ბუღ. რეგისტრი)], //Type: ПланСчетовУправленческий,
	ApplyMap('MapПланСчетовУправленческийКод',[ანგარიში],Null()) AS [ანგარიშის კოდი (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	ApplyMap('MapПланСчетовУправленческий',[ანგარიში],Null()) AS [ანგარიში (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	ApplyMap('MapПланСчетовУправленческийАктивПассив',[ანგარიში],Null()) AS [ანგარიში აქტიური/პასიური (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	[ორგანიზაცია] AS [%lnk_ორგანიზაცია (გატარებების ჟურნალი,ბუღ. რეგისტრი)], //Type: СправочникОрганизации,
	ApplyMap('MapСправочникОрганизации',[ორგანიზაცია],Null()) AS [ორგანიზაცია (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	[თანხა დტ] AS [თანხა დტ (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	[თანხა კტ] AS [თანხა კტ (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	[თანხა] AS [თანხა (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	ApplyMap('MapПланСчетовУправленческийСчетДляОтображенияВБаланса',[ანგარიში],[ანგარიში]) AS [%lnk_ანგარიში (ბალანსის) (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	ApplyMap('MapПланСчетовУправленческийКод',ApplyMap('MapПланСчетовУправленческийСчетДляОтображенияВБаланса',[ანგარიში],[ანგარიში]),Null()) AS [ანგარიშის კოდი (ბალანსის) (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	ApplyMap('MapПланСчетовУправленческий',ApplyMap('MapПланСчетовУправленческийСчетДляОтображенияВБаланса',[ანგარიში],[ანგარიში]),Null()) AS [ანგარიში (ბალანსის) (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	ApplyMap('MapПланСчетовУправленческийБалансовыйСчет',ApplyMap('MapПланСчетовУправленческийСчетДляОтображенияВБаланса',[ანგარიში],[ანგარიში]),'00') AS [ანგარიში საბალანსოა (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	ApplyMap('MapПланСчетовУправленческийВидСчетаБалансаОтрицательный',ApplyMap('MapПланСчетовУправленческийСчетДляОтображенияВБаланса',[ანგარიში],[ანგარიში]),Null()) AS [%lnk_საბალანსო ანგარიშის სახეობა (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	ApplyMap('MapПланСчетовУправленческийВидСчетаPL',[ანგარიში],Null()) AS [%lnk_PL სახეობა (გატარებების ჟურნალი,ბუღ. რეგისტრი)]
Resident РегистрБухгалтерииУправленческийPre;

// Concatenate(РегистрБухгалтерииУправленческий)
// LOAD
// 	floor([პერიოდი]) AS AccountingDate,
// 	[ორგანიზაცია] & '|' & floor([პერიოდი]) & '|' & 1 as [ორგანიზაცია_პერიოდი_ნაშთია],
//     [პერიოდი] AS [პერიოდი (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
// 	1 AS [ნაშთია (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
// 	[ანგარიში] AS [%lnk_ანგარიში (გატარებების ჟურნალი,ბუღ. რეგისტრი)], //Type: ПланСчетовУправленческий,
// 	ApplyMap('MapПланСчетовУправленческийКод',[ანგარიში],Null()) AS [ანგარიშის კოდი (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
// 	ApplyMap('MapПланСчетовУправленческий',[ანგარიში],Null()) AS [ანგარიში (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
// 	ApplyMap('MapПланСчетовУправленческийАктивПассив',[ანგარიში],Null()) AS [ანგარიში აქტიური/პასიური (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
// 	[ორგანიზაცია] AS [%lnk_ორგანიზაცია (გატარებების ჟურნალი,ბუღ. რეგისტრი)], //Type: СправочникОрганизации,
// 	ApplyMap('MapСправочникОрганизации',[ორგანიზაცია],Null()) AS [ორგანიზაცია (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
// 	ApplyMap('MapПланСчетовУправленческийСчетДляОтображенияВБаланса',[ანგარიში],[ანგარიში]) AS [%lnk_ანგარიში (ბალანსის) (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
// 	ApplyMap('MapПланСчетовУправленческийКод',ApplyMap('MapПланСчетовУправленческийСчетДляОтображенияВБаланса',[ანგარიში],[ანგარიში]),Null()) AS [ანგარიშის კოდი (ბალანსის) (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
// 	ApplyMap('MapПланСчетовУправленческий',ApplyMap('MapПланСчетовУправленческийСчетДляОтображенияВБаланса',[ანგარიში],[ანგარიში]),Null()) AS [ანგარიში (ბალანსის) (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
// 	ApplyMap('MapПланСчетовУправленческийБалансовыйСчет',ApplyMap('MapПланСчетовУправленческийСчетДляОтображенияВБаланса',[ანგარიში],[ანგარიში]),'00') AS [ანგარიში საბალანსოა (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
// 	ApplyMap('MapПланСчетовУправленческийВидСчетаБалансаОтрицательный',ApplyMap('MapПланСчетовУправленческийСчетДляОтображенияВБаланса',[ანგარიში],[ანგარიში]),Null()) AS [%lnk_საბალანსო ანგარიშის სახეობა (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
// 	ApplyMap('MapПланСчетовУправленческийВидСчетаPL',[ანგარიში],Null()) AS [%lnk_PL სახეობა (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
// 	[თანხა] as [თანხა (გატარებების ჟურნალი,ბუღ. რეგისტრი, ნაშთი)]
// Resident РегистрБухгалтерииУправленческийPre;

РегистрБухгалтерииУправленческийPreOst:
Load
	[პერიოდი],
	[ორგანიზაცია], 
	[ანგარიში],
	AutoNumberHash128([ორგანიზაცია], [ანგარიში]) as [ნაშთების ჭრილი],
    sum([თანხა]) as [თანხა],
	sum([თანხა დტ]) as [თანხა დტ],
	sum([თანხა კტ]) as [თანხა კტ]
Resident РегистрБухгалтерииУправленческийPre
Group by
	[პერიოდი],
	[ორგანიზაცია], 
	[ანგარიში];    

Drop Table РегистрБухгалтерииУправленческийPre;


РегистрБухгалтерииУправленческийPreOstTemp:
LOAD
	RowNo() as [RowNo],
	[პერიოდი] as [პერიოდი],
	[ორგანიზაცია] as [ორგანიზაცია],
	[ანგარიში] as [ანგარიში],
	AutoNumberHash128([ორგანიზაცია], [ანგარიში]) as [ნაშთების ჭრილი],
    if([ნაშთების ჭრილი]=peek([ნაშთების ჭრილი]), [თანხა]+peek([თანხა ნაშთი]), [თანხა]) AS [თანხა ნაშთი],
    if([ნაშთების ჭრილი]=peek([ნაშთების ჭრილი]), [თანხა დტ]+peek([თანხა დტ ნაშთი]), [თანხა დტ]) AS [თანხა დტ ნაშთი],
    if([ნაშთების ჭრილი]=peek([ნაშთების ჭრილი]), [თანხა კტ]+peek([თანხა კტ ნაშთი]), [თანხა კტ]) AS [თანხა კტ ნაშთი]
Resident РегистрБухгалтерииУправленческийPreOst
Order By
	[ნაშთების ჭრილი],
    [პერიოდი] asc;

drop table РегистрБухгалтерииУправленческийPreOst;

РегистрБухгалтерииУправленческийВысчетОстатков:
LOAD
	[პერიოდი] as [პერიოდი],
	[ორგანიზაცია] as [ორგანიზაცია],
	[ანგარიში] as [ანგარიში],
	[ნაშთების ჭრილი] as [ნაშთების ჭრილი],
    [თანხა ნაშთი] AS [თანხა ნაშთი],
    [თანხა დტ ნაშთი] as [თანხა დტ ნაშთი],
    [თანხა კტ ნაშთი] as [თანხა კტ ნაშთი],
    [პერიოდი] as [ინტერვალის დაწყების თარიღი],
    if([ნაშთების ჭრილი]=peek([ნაშთების ჭრილი]), date(peek([პერიოდი])-1,'DD/MM/YYYY'), IF(Round([თანხა ნაშთი]) = 0, [პერიოდი], $(vNow))) as [ინტერვალის დასრულების თარიღი],
    date([პერიოდი],'YYYY/MM/DD') & '|' & date(if([ნაშთების ჭრილი]=peek([ნაშთების ჭრილი]), date(peek([პერიოდი])-1,'DD/MM/YYYY'), IF(Round([თანხა ნაშთი]) = 0, [პერიოდი], date($(vNow)))),'YYYY/MM/DD') as [ინტერვალი],
    AutoNumber(date([პერიოდი],'YYYY/MM/DD') & '|' & date(if([ნაშთების ჭრილი]=peek([ნაშთების ჭრილი]), date(peek([პერიოდი])-1,'DD/MM/YYYY'), IF(Round([თანხა ნაშთი]) = 0, [პერიოდი], date($(vNow)))),'YYYY/MM/DD')) as [ინტერვალის იდენტიფიკატორი]
Resident РегистрБухгалтерииУправленческийPreOstTemp
Order By
	[RowNo] desc;
    
drop table РегистрБухгалтерииУправленческийPreOstTemp; 

////////////////////// Interval Match /////////////////////////////

Интервалы:
LOAD Distinct
  [ინტერვალის დაწყების თარიღი] AS [ინტერვალის დაწყების თარიღი],
  [ინტერვალის დასრულების თარიღი] AS [ინტერვალის დასრულების თარიღი]
Resident РегистрБухгалтерииУправленческийВысчетОстатков;


ДатыНачалаИОкончанияИнтервалов:
Load
	Min([ინტერვალის დაწყების თარიღი]) as MinDate,
    Max([ინტერვალის დასრულების თარიღი]) as MaxDate
Resident Интервалы;

let vMinDate = peek('MinDate',0,'ДатыНачалаИОкончанияИнтервалов') ;
let vMaxDate = peek('MaxDate',0,'ДатыНачалаИОкончанияИнтервалов') ;

drop table ДатыНачалаИОкончанияИнтервалов;

NoConcatenate
ДниИнтервалов:
Load
	$(vMinDate) + RowNo() - 1 as [ინტერვალის დღე]
AutoGenerate ($(vMaxDate) - $(vMinDate)+1);


Inner Join IntervalMatch ([ინტერვალის დღე])
Load Distinct 
  [ინტერვალის დაწყების თარიღი],
  [ინტერვალის დასრულების თარიღი]
Resident Интервалы;

drop table Интервалы;

Left Join(РегистрБухгалтерииУправленческийВысчетОстатков)
Load Distinct
  AutoNumber(date([ინტერვალის დაწყების თარიღი],'YYYY/MM/DD')&'|'&date([ინტერვალის დასრულების თარიღი],'YYYY/MM/DD')) as [ინტერვალის იდენტიფიკატორი],
  //if(floor(START_DATE)= floor(dd),1,0) as isSD_IC,
  [ინტერვალის დღე] as [ინტერვალის დღე]
Resident ДниИнтервалов;

drop table ДниИнтервалов;




Concatenate(РегистрБухгалтерииУправленческий)
LOAD
	floor([ინტერვალის დღე]) AS AccountingDate,
	[ორგანიზაცია] & '|' & floor([ინტერვალის დღე]) & '|' & 0 as [ორგანიზაცია_პერიოდი_ნაშთია],
    [ინტერვალის დღე] AS [პერიოდი (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	0 AS [ნაშთია (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	[ანგარიში] AS [%lnk_ანგარიში (გატარებების ჟურნალი,ბუღ. რეგისტრი)], //Type: ПланСчетовУправленческий,
	ApplyMap('MapПланСчетовУправленческийКод',[ანგარიში],Null()) AS [ანგარიშის კოდი (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	ApplyMap('MapПланСчетовУправленческий',[ანგარიში],Null()) AS [ანგარიში (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	ApplyMap('MapПланСчетовУправленческийАктивПассив',[ანგარიში],Null()) AS [ანგარიში აქტიური/პასიური (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	[ორგანიზაცია] AS [%lnk_ორგანიზაცია (გატარებების ჟურნალი,ბუღ. რეგისტრი)], //Type: СправочникОрганизации,
	ApplyMap('MapСправочникОрганизации',[ორგანიზაცია],Null()) AS [ორგანიზაცია (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	ApplyMap('MapПланСчетовУправленческийСчетДляОтображенияВБаланса',[ანგარიში],[ანგარიში]) AS [%lnk_ანგარიში (ბალანსის) (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	ApplyMap('MapПланСчетовУправленческийКод',ApplyMap('MapПланСчетовУправленческийСчетДляОтображенияВБаланса',[ანგარიში],[ანგარიში]),Null()) AS [ანგარიშის კოდი (ბალანსის) (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	ApplyMap('MapПланСчетовУправленческий',ApplyMap('MapПланСчетовУправленческийСчетДляОтображенияВБаланса',[ანგარიში],[ანგარიში]),Null()) AS [ანგარიში (ბალანსის) (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	ApplyMap('MapПланСчетовУправленческийБалансовыйСчет',ApplyMap('MapПланСчетовУправленческийСчетДляОтображенияВБаланса',[ანგარიში],[ანგარიში]),'00') AS [ანგარიში საბალანსოა (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	ApplyMap('MapПланСчетовУправленческийВидСчетаБалансаОтрицательный',ApplyMap('MapПланСчетовУправленческийСчетДляОтображенияВБаланса',[ანგარიში],[ანგარიში]),Null()) AS [%lnk_საბალანსო ანგარიშის სახეობა (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	ApplyMap('MapПланСчетовУправленческийВидСчетаPL',[ანგარიში],Null()) AS [%lnk_PL სახეობა (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	[თანხა ნაშთი] as [თანხა (გატარებების ჟურნალი,ბუღ. რეგისტრი, ნაშთი)]
Resident РегистрБухгалтерииУправленческийВысчетОстатков;
    
Drop Table РегистрБухгалтерииУправленческийВысчетОстатков;

//exit script;
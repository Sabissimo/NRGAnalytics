РегистрБухгалтерииУправленческийPreNGM:
LOAD
    *
FROM [lib://$(vSpace):DataFiles/Elvare_$(vPrefix)_РегистрБухгалтерииУправленческий-*.qvd]
(qvd);

РегистрБухгалтерииУправленческийPreNG:
Load 
	*,
	0 as [მოძრაობის ტიპი]
Resident РегистрБухгалтерииУправленческийPreNGM;

РегистрБухгалтерииУправленческийPreNG:
Load 
	*,
	1 as [მოძრაობის ტიპი]
Resident РегистрБухгалтерииУправленческийPreNGM;

Drop Table РегистрБухгалтерииУправленческийPreNGM;

РегистрБухгалтерииУправленческийPre:
Load
	Date(AddYears([Период],-2000),'DD/MM/YYYY') as [პერიოდი],
	floor(Date(AddYears([Период],-2000),'DD/MM/YYYY')) AS AccountingDate,
	AutoNumberHash128([ორგანიზაცია], if([მოძრაობის ტიპი] = 0, [ანგარიში დტ], [ანგარიში კტ]), if([მოძრაობის ტიპი] = 0, [ვალუტა დტ], [ვალუტა კტ])) as AccountingPeekGroup,
	[ორგანიზაცია], 
	if([მოძრაობის ტიპი] = 0, [ანგარიში დტ], [ანგარიში კტ]) as [ანგარიში],
    if([მოძრაობის ტიპი] = 0, [ვალუტა დტ], [ვალუტა კტ]) as [ვალუტა],
	sum(if([მოძრაობის ტიპი] = 0, 1, -1) * [თანხა]) as [თანხა],
	sum(if([მოძრაობის ტიპი] = 0, 1, 0) * [თანხა]) as [თანხა დტ],
	sum(if([მოძრაობის ტიპი] = 0, 0, 1) * [თანხა]) as [თანხა კტ],
	sum(if([მოძრაობის ტიპი] = 0, [თანხა (ვალუტა) დტ], -1 * [თანხა (ვალუტა) კტ])) as [თანხა (ვალუტა)],
	sum(if([მოძრაობის ტიპი] = 0, 1, 0) * [თანხა (ვალუტა) დტ]) as [თანხა (ვალუტა) დტ],
	sum(if([მოძრაობის ტიპი] = 0, 0, 1) * [თანხა (ვალუტა) კტ]) as [თანხა (ვალუტა) კტ]
Resident РегистрБухгалтерииУправленческийPreNG
Group by
	Date(AddYears([Период],-2000),'DD/MM/YYYY'),
	floor(Date(AddYears([Период],-2000),'DD/MM/YYYY')),
	AutoNumberHash128([ორგანიზაცია], if([მოძრაობის ტიპი] = 0, [ანგარიში დტ], [ანგარიში კტ]), if([მოძრაობის ტიპი] = 0, [ვალუტა დტ], [ვალუტა კტ])),
	[ორგანიზაცია], 
	if([მოძრაობის ტიპი] = 0, [ანგარიში დტ], [ანგარიში კტ]),
    if([მოძრაობის ტიპი] = 0, [ვალუტა დტ], [ვალუტა კტ]);

Drop Table РегистрБухгалтерииУправленческийPreNG;

РегистрБухгалтерииУправленческий:
LOAD
	AccountingDate AS AccountingDate,
	AccountingPeekGroup as AccountingPeekGroup,
	[ორგანიზაცია] & '|' & floor([პერიოდი]) as [ორგანიზაცია_პერიოდი],
    [პერიოდი] AS [პერიოდი (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	[ანგარიში] AS [%lnk_ანგარიში (გატარებების ჟურნალი,ბუღ. რეგისტრი)], //Type: ПланСчетовУправленческий,
	ApplyMap('MapПланСчетовУправленческийКод',[ანგარიში],Null()) AS [ანგარიშის კოდი (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	ApplyMap('MapПланСчетовУправленческий',[ანგარიში],Null()) AS [ანგარიში (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	[ორგანიზაცია] AS [%lnk_ორგანიზაცია (გატარებების ჟურნალი,ბუღ. რეგისტრი)], //Type: СправочникОрганизации,
	ApplyMap('MapСправочникОрганизации',[ორგანიზაცია],Null()) AS [ორგანიზაცია (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	[ვალუტა] AS [%lnk_ვალუტა (გატარებების ჟურნალი,ბუღ. რეგისტრი)], //Type: СправочникВалюты,
	ApplyMap('MapСправочникВалюты',[ვალუტა],Null()) AS [ვალუტა (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	[თანხა დტ] AS [თანხა დტ (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	[თანხა (ვალუტა) დტ] AS [თანხა (ვალუტა) დტ (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	[თანხა (ვალუტა) დტ] * ApplyMap('MapКурсыВалют',[ვალუტა],1) AS [თანხა (ექვ.) დტ (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	[თანხა კტ] AS [თანხა კტ (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	[თანხა (ვალუტა) კტ]  AS [თანხა (ვალუტა) კტ (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	[თანხა (ვალუტა) კტ] * ApplyMap('MapКурсыВалют',[ვალუტა],1)  AS [თანხა (ექვ.) კტ (გატარებების ჟურნალი,ბუღ. რეგისტრი)],		
	[თანხა] AS [თანხა (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	[თანხა (ვალუტა)] AS [თანხა (ვალუტა) (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	[თანხა (ვალუტა)] * ApplyMap('MapКурсыВалют',[ვალუტა],1) AS [თანხა (ექვ.) (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	ApplyMap('MapПланСчетовУправленческийСчетДляОтображенияВБаланса',[%lnk_ანგარიში (გატარებების ჟურნალი,ბუღ. რეგისტრი)],[%lnk_ანგარიში (გატარებების ჟურნალი,ბუღ. რეგისტრი)]) AS [%lnk_ანგარიში (ბალანსის) (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	ApplyMap('MapПланСчетовУправленческийКод',ApplyMap('MapПланСчетовУправленческийСчетДляОтображенияВБаланса',[%lnk_ანგარიში (გატარებების ჟურნალი,ბუღ. რეგისტრი)],[%lnk_ანგარიში (გატარებების ჟურნალი,ბუღ. რეგისტრი)]),Null()) AS [ანგარიშის კოდი (ბალანსის) (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	ApplyMap('MapПланСчетовУправленческий',ApplyMap('MapПланСчетовУправленческийСчетДляОтображенияВБаланса',[%lnk_ანგარიში (გატარებების ჟურნალი,ბუღ. რეგისტრი)],[%lnk_ანგარიში (გატარებების ჟურნალი,ბუღ. რეგისტრი)]),Null()) AS [ანგარიში (ბალანსის) (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	ApplyMap('MapПланСчетовУправленческийБалансовыйСчет',ApplyMap('MapПланСчетовУправленческийСчетДляОтображенияВБаланса',[%lnk_ანგარიში (გატარებების ჟურნალი,ბუღ. რეგისტრი)],[%lnk_ანგარიში (გატარებების ჟურნალი,ბუღ. რეგისტრი)]),'00') AS [ანგარიში საბალანსოა (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	ApplyMap('MapПланСчетовУправленческийВидСчетаБалансаОтрицательный',ApplyMap('MapПланСчетовУправленческийСчетДляОтображенияВБаланса',[%lnk_ანგარიში (გატარებების ჟურნალი,ბუღ. რეგისტრი)],[%lnk_ანგარიში (გატარებების ჟურნალი,ბუღ. რეგისტრი)]),Null()) AS [%lnk_საბალანსო ანგარიშის სახეობა (გატარებების ჟურნალი,ბუღ. რეგისტრი)],
	if(AccountingPeekGroup=peek(AccountingPeekGroup), [თანხა]+peek([თანხა (გატარებების ჟურნალი,ბუღ. რეგისტრი, ნაშთი)]), [თანხა]) as [თანხა (გატარებების ჟურნალი,ბუღ. რეგისტრი, ნაშთი)],
	if(AccountingPeekGroup=peek(AccountingPeekGroup), [თანხა (ვალუტა)]+peek([თანხა (ვალუტა) (გატარებების ჟურნალი,ბუღ. რეგისტრი, ნაშთი)]), [თანხა (ვალუტა)]) as [თანხა (ვალუტა) (გატარებების ჟურნალი,ბუღ. რეგისტრი, ნაშთი)],
	if(AccountingPeekGroup=peek(AccountingPeekGroup), [თანხა (ვალუტა)] * ApplyMap('MapКурсыВалют',[ვალუტა],1)+peek([თანხა (ექვ.) (გატარებების ჟურნალი,ბუღ. რეგისტრი, ნაშთი)]), [თანხა (ვალუტა)] * ApplyMap('MapКурсыВалют',[ვალუტა],1)) as [თანხა (ექვ.) (გატარებების ჟურნალი,ბუღ. რეგისტრი, ნაშთი)]
Resident РегистрБухгалтерииУправленческийPre
order by  
	AccountingPeekGroup,
	AccountingDate;

Drop Table РегистрБухгалтерииУправленческийPre;
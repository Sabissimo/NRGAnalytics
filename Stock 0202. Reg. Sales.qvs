РегистрНакопленияПродажиPre:
LOAD
    *
FROM [lib://$(vSpace):DataFiles/$(vSpacePrefix)_$(vPrefix)_РегистрНакопленияПродажи-*.qvd]
(qvd);

РегистрНакопленияПродажи:
LOAD
	floor(Date(DayStart(AddYears([Период],-2000)),'DD/MM/YYYY')) AS SalesDate,
	[ორგანიზაცია] & '|' & ApplyMap('MapДокументРасходнаяНакладнаяСклад',[დოკუმენტი],null()) & '|' & [ნომენკლატურა] & '|' & floor(Date(DayStart(AddYears([Период],-2000)),'DD/MM/YYYY')) & '|' & 0 as [ორგანიზაცია_საწყობი_ნომენკლატურა_პერიოდი_ნაშთია],
    0 as [ნაშთია (გაყიდვები)],
    Date(DayStart(AddYears([Период],-2000)),'DD/MM/YYYY') AS [პერიოდი (გაყიდვები)],
	[Регистратор] AS [%lnk_რეგისტრატორი (გაყიდვები)], //Type: ДокументКорректировкаРегистров,ДокументПередачаВА,ДокументКорректировкаРеализации,ДокументРасходнаяНакладная,ДокументОтчетКомиссионера,ДокументКРОНТО_ЗачетДолга,ДокументПриходнаяНакладная,ДокументАктВыполненныхРабот,ДокументРасходСоСчета,ДокументЧекККМ,ДокументОтчетОПереработке,ДокументПоступлениеВКассу,ДокументЗаказПокупателя,ДокументПриемИПередачаВРемонт,ДокументОтчетОРозничныхПродажах,ДокументРасходИзКассы,ДокументВзаимозачет,ДокументЗакрытиеМесяца,ДокументПредварительныйЗаказПокупателя,ДокументПоступлениеНаСчет,ДокументВводНачальныхОстатков,ДокументОперацияПоПлатежнымКартам,
	[დოკუმენტი] AS [%lnk_დოკუმენტი (გაყიდვები)], //Type: ДокументРасходнаяНакладная,ДокументОтчетКомиссионера,ДокументПриходнаяНакладная,ДокументАктВыполненныхРабот,ДокументЧекККМ,ДокументОтчетОПереработке,ДокументАвансовыйОтчет,ДокументЗаказПокупателя,ДокументОтчетОРозничныхПродажах,ДокументОтчетКомитенту,
	[კონტრაგენტი] AS [%lnk_კონტრაგენტი (გაყიდვები)], //Type: СправочникКонтрагенты,
    ApplyMap('MapСправочникКонтрагенты',[კონტრაგენტი],Null()) AS [კონტრაგენტი (გაყიდვები)],
    ApplyMap('MapСправочникКонтрагентыДополнительныеРеквизитыInternal',[კონტრაგენტი],'არა') AS [Internal (კონტრაგენტები)],
    [ნომენკლატურა] AS [%lnk_ნომენკლატურა (გაყიდვები)], //Type: СправочникНоменклатура,
    ApplyMap('MapСправочникНоменклатура',[ნომენკლატურა],Null()) AS [ნომენკლატურა (გაყიდვები)],
    [ორგანიზაცია] AS [%lnk_ორგანიზაცია (გაყიდვები)], //Type: СправочникОрганизации,
	ApplyMap('MapСправочникОрганизации',[ორგანიზაცია],Null()) AS [ორგანიზაცია (გაყიდვები)],
	[რაოდენობა] AS [რაოდენობა (გაყიდვები)],
	[რაოდენობა] AS [რაოდენობა (გაყიდვები, ნოლებით)],
	[თანხა] - [მ.შ. დღგ] AS [თანხა (გაყიდვები)],
	[მ.შ. დღგ] AS [დღგ (გაყიდვები)],
	[თვითღირებულება] AS [თვითღირებულება (გაყიდვები)],
    ApplyMap('MapДокументРасходнаяНакладнаяСклад',[დოკუმენტი],null()) as [%lnk_საწყობი (გაყიდვები)],
    ApplyMap('MapСправочникСтруктурныеЕдиницы',ApplyMap('MapДокументРасходнаяНакладнаяСклад',[დოკუმენტი],null()),Null()) as [საწყობი (გაყიდვები)],
    ApplyMap('АктивныеМинМаксы',ApplyMap('MapДокументРасходнаяНакладнаяСклад',[დოკუმენტი],'') & '|' & [ნომენკლატურა],'03') AS [MinMaxExists  (გაყიდვები)]
Resident РегистрНакопленияПродажиPre
where 
	floor(AddYears([Период],-2000)) <= $(vNow);

Drop Table РегистрНакопленияПродажиPre;

TemporaryCalendarTemp: 
LOAD 
	 $(vMinDateTemp) + recno() - 1 AS TempDate 
AUTOGENERATE if(isnull(vMaxDateTemp) or isnull(vMinDateTemp),0,$(vMaxDateTemp) - $(vMinDateTemp) + 1);

РегистрНакопленияПродажиНоменклатураСклад:
Load distinct
	[ნაშთია (გაყიდვები)],
	[%lnk_ნომენკლატურა (გაყიდვები)], //Type: СправочникНоменклатура,
    [ნომენკლატურა (გაყიდვები)],
    [%lnk_ორგანიზაცია (გაყიდვები)], //Type: СправочникОрганизации,
	[ორგანიზაცია (გაყიდვები)],
    [%lnk_საწყობი (გაყიდვები)],
	[საწყობი (გაყიდვები)]
Resident РегистрНакопленияПродажи;

Left Join (РегистрНакопленияПродажиНоменклатураСклад)
Load
	*
Resident TemporaryCalendarTemp;

Drop Table TemporaryCalendarTemp;

//drop table РегистрНакопленияПродажи;

Concatenate(РегистрНакопленияПродажи)
//РегистрНакопленияПродажи:
LOAD
	floor(Date(DayStart(TempDate),'DD/MM/YYYY')) AS SalesDate,
	[%lnk_ორგანიზაცია (გაყიდვები)] & '|' & [%lnk_საწყობი (გაყიდვები)] & '|' & [%lnk_ნომენკლატურა (გაყიდვები)] & '|' & floor(Date(DayStart(TempDate),'DD/MM/YYYY')) & '|' & 0 as [ორგანიზაცია_საწყობი_ნომენკლატურა_პერიოდი_ნაშთია],
    [ნაშთია (გაყიდვები)],
    Date(DayStart(TempDate),'DD/MM/YYYY') AS [პერიოდი (გაყიდვები)],
	'არა' AS [Internal (კონტრაგენტები)],
    [%lnk_ნომენკლატურა (გაყიდვები)], //Type: СправочникНоменклатура,
    [ნომენკლატურა (გაყიდვები)],
    [%lnk_ორგანიზაცია (გაყიდვები)], //Type: СправочникОрганизации,
	[ორგანიზაცია (გაყიდვები)],
	0 AS [რაოდენობა (გაყიდვები, ნოლებით)],
    [%lnk_საწყობი (გაყიდვები)],
    [საწყობი (გაყიდვები)],
    ApplyMap('АктивныеМинМаксы',[%lnk_საწყობი (გაყიდვები)] & '|' & [%lnk_ნომენკლატურა (გაყიდვები)],'03') AS [MinMaxExists  (გაყიდვები)]
Resident РегистрНакопленияПродажиНоменклатураСклад;

Drop Table РегистрНакопленияПродажиНоменклатураСклад;



//exit script;


СезонностьPre:
SELECT [თვე],
	[სეზონურობა],
	[კოეფიციენტი]
FROM GetWorksheetV2
WITH PROPERTIES (
worksheetKey='1-f15L80uaVKbMAD786Bp5NHDQlr7IqxFHhQoIBosNWA:_1475883086',
gidOverride='',
generatedNumberedColumns='false',
skipRows=''
);

Сезонность:
LOAD [თვე] as [MONTH_NUM Stock], 
	[სეზონურობა] as [სეზონურობა]
Resident СезонностьPre;

КоэффициентСезонности:
LOAD 
	[კოეფიციენტი] as [სეზონურობის კოეფიციენტი]
Resident СезонностьPre
WHERE
	[თვე] = num(month($(vNow)+7));

Drop Table СезонностьPre;
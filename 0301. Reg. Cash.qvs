РегистрНакопленияДенежныеСредстваPre:
LOAD
    *
FROM [lib://$(vSpace):DataFiles/Elvare_$(vPrefix)_РегистрНакопленияДенежныеСредства-*.qvd]
(qvd);

РегистрНакопленияДенежныеСредства:
LOAD
	floor(Date(AddYears([Период],-2000),'DD/MM/YYYY HH:mm:ss')) AS CashDate,
    [ორგანიზაცია] & '|' & [ვალუტა] & '|' & floor(Date(AddYears([Период],-2000),'DD/MM/YYYY HH:mm:ss')) & '|' & 1 as [ორგანიზაცია_ვალუტა_პერიოდი_ნაშთია],
    1 as [ნაშთია (ფულადი სახსრები,დაგრ. რეგისტრი)],
	Date(AddYears([Период],-2000),'DD/MM/YYYY HH:mm:ss') AS [პერიოდი (ფულადი სახსრები,დაგრ. რეგისტრი)],
	[Регистратор] AS [%lnk_რეგისტრატორი (ფულადი სახსრები,დაგრ. რეგისტრი)], //Type: ДокументКорректировкаРегистров,ДокументРасходСоСчета,ДокументПоступлениеВКассу,ДокументПеремещениеДС,ДокументРасходИзКассы,ДокументЗакрытиеМесяца,ДокументПоступлениеНаСчет,ДокументВводНачальныхОстатков,ДокументОперацияПоПлатежнымКартам,
	[ВидДвижения] AS [მოძრაობის ტიპი (ფულადი სახსრები,დაგრ. რეგისტრი)],
	[ორგანიზაცია] AS [%lnk_ორგანიზაცია (ფულადი სახსრები,დაგრ. რეგისტრი)], //Type: СправочникОрганизации,
    ApplyMap('MapСправочникОрганизации',[ორგანიზაცია],Null()) AS [ორგანიზაცია (ფულადი სახსრები,დაგრ. რეგისტრი)],
	[ფულადი სახსრების ტიპი] AS [%lnk_ფულადი სახსრების ტიპი (ფულადი სახსრები,დაგრ. რეგისტრი)], //Type: ПеречислениеТипыДенежныхСредств,
	ApplyMap('MapПеречислениеТипыДенежныхСредств',[ფულადი სახსრების ტიპი],Null()) AS [ფულადი სახსრების ტიპი (ფულადი სახსრები,დაგრ. რეგისტრი)],
	[საბანკო ანგარიში სალარო] AS [%lnk_საბანკო ანგარიში სალარო (ფულადი სახსრები,დაგრ. რეგისტრი)], //Type: СправочникБанковскиеСчета,СправочникКассы,
	IF([საბანკო ანგარიში სალარო_TYPE] = 'СправочникБанковскиеСчета', ApplyMap('MapСправочникБанковскиеСчета',[საბანკო ანგარიში სალარო],Null()),
		IF([საბანკო ანგარიში სალარო_TYPE] = 'СправочникКассы', ApplyMap('MapСправочникКассы',[საბანკო ანგარიში სალარო],Null()),
		[საბანკო ანგარიში სალარო])) AS [საბანკო ანგარიში სალარო (ფულადი სახსრები,დაგრ. რეგისტრი)],
	[ვალუტა] AS [%lnk_ვალუტა (ფულადი სახსრები,დაგრ. რეგისტრი)], //Type: СправочникВалюты,
	ApplyMap('MapСправочникВалюты',[ვალუტა],Null()) AS [ვალუტა (ფულადი სახსრები,დაგრ. რეგისტრი)],
    Null() AS [თანხა (ფულადი სახსრები,დაგრ. რეგისტრი)],
	Null() AS [თანხა ვალ. (ფულადი სახსრები,დაგრ. რეგისტრი)],
    Null() AS [თანხა ექვ. (ფულადი სახსრები,დაგრ. რეგისტრი)],
	If([ВидДвижения] = 1, -1, 1) * [თანხა] AS [თანხა (ფულადი სახსრები,დაგრ. რეგისტრი, ნაშთი)],
	If([ВидДвижения] = 1, -1, 1) * [თანხა ვალუტა] AS [თანხა ვალ. (ფულადი სახსრები,დაგრ. რეგისტრი, ნაშთი)],
    If([ВидДвижения] = 1, -1, 1) * [თანხა ვალუტა] * ApplyMap('MapКурсыВалют',[ვალუტა],1) AS [თანხა ექვ. (ფულადი სახსრები,დაგრ. რეგისტრი, ნაშთი)],
	[გატარების შინაარსი] AS [გატარების შინაარსი (ფულადი სახსრები,დაგრ. რეგისტრი)],
	[მუხლი] AS [%lnk_მუხლი (ფულადი სახსრები,დაგრ. რეგისტრი)], //Type: СправочникСтатьиДвиженияДенежныхСредств,
	ApplyMap('MapСправочникСтатьиДвиженияДенежныхСредств',[მუხლი],Null()) AS [მუხლი (ფულადი სახსრები,დაგრ. რეგისტრი)],
	ApplyMap('MapГруппаСтатьи',[მუხლი],Null())  AS [მუხლის ჯგუფი (ფულადი სახსრები,დაგრ. რეგისტრი)], //Type: СправочникСтатьиДвиженияДенежныхСредств,
	ApplyMap('MapКонсолидированныеСтатьиДвиженияДенежныхСредств',[მუხლი],[მუხლი])  AS [%lnk_მუხლი კონსოლიდირებული (ფულადი სახსრები,დაგრ. რეგისტრი)], //Type: СправочникСтатьиДвиженияДенежныхСредств,
    ApplyMap('MapСправочникСтатьиДвиженияДенежныхСредств',ApplyMap('MapКонсолидированныеСтатьиДвиженияДенежныхСредств',[მუხლი],[მუხლი]),Null()) AS [მუხლი კონსოლიდირებული (ფულადი სახსრები,დაგრ. რეგისტრი)],
    ApplyMap('MapГруппаСтатьи',ApplyMap('MapКонсолидированныеСтатьиДвиженияДенежныхСредств',[მუხლი],[მუხლი]),Null())  AS [კონსოლიდირებული მუხლის ჯგუფი (ფულადი სახსრები,დაგრ. რეგისტრი)] //Type: СправочникСтатьиДвиженияДенежныхСредств,
Resident РегистрНакопленияДенежныеСредстваPre;

РегистрНакопленияДенежныеСредства:
LOAD
	floor(Date(AddYears([Период],-2000),'DD/MM/YYYY HH:mm:ss')) AS CashDate,
    [ორგანიზაცია] & '|' & [ვალუტა] & '|' & floor(Date(AddYears([Период],-2000),'DD/MM/YYYY HH:mm:ss')) & '|' & 0 as [ორგანიზაცია_ვალუტა_პერიოდი_ნაშთია],
    0 as [ნაშთია (ფულადი სახსრები,დაგრ. რეგისტრი)],
	Date(AddYears([Период],-2000),'DD/MM/YYYY HH:mm:ss') AS [პერიოდი (ფულადი სახსრები,დაგრ. რეგისტრი)],
	[Регистратор] AS [%lnk_რეგისტრატორი (ფულადი სახსრები,დაგრ. რეგისტრი)], //Type: ДокументКорректировкаРегистров,ДокументРасходСоСчета,ДокументПоступлениеВКассу,ДокументПеремещениеДС,ДокументРасходИзКассы,ДокументЗакрытиеМесяца,ДокументПоступлениеНаСчет,ДокументВводНачальныхОстатков,ДокументОперацияПоПлатежнымКартам,
	[ВидДвижения] AS [მოძრაობის ტიპი (ფულადი სახსრები,დაგრ. რეგისტრი)],
	[ორგანიზაცია] AS [%lnk_ორგანიზაცია (ფულადი სახსრები,დაგრ. რეგისტრი)], //Type: СправочникОрганизации,
    ApplyMap('MapСправочникОрганизации',[ორგანიზაცია],Null()) AS [ორგანიზაცია (ფულადი სახსრები,დაგრ. რეგისტრი)],
	[ფულადი სახსრების ტიპი] AS [%lnk_ფულადი სახსრების ტიპი (ფულადი სახსრები,დაგრ. რეგისტრი)], //Type: ПеречислениеТипыДенежныхСредств,
	ApplyMap('MapПеречислениеТипыДенежныхСредств',[ფულადი სახსრების ტიპი],Null()) AS [ფულადი სახსრების ტიპი (ფულადი სახსრები,დაგრ. რეგისტრი)],
	[საბანკო ანგარიში სალარო] AS [%lnk_საბანკო ანგარიში სალარო (ფულადი სახსრები,დაგრ. რეგისტრი)], //Type: СправочникБанковскиеСчета,СправочникКассы,
	IF([საბანკო ანგარიში სალარო_TYPE] = 'СправочникБанковскиеСчета', ApplyMap('MapСправочникБанковскиеСчета',[საბანკო ანგარიში სალარო],Null()),
		IF([საბანკო ანგარიში სალარო_TYPE] = 'СправочникКассы', ApplyMap('MapСправочникКассы',[საბანკო ანგარიში სალარო],Null()),
		[საბანკო ანგარიში სალარო])) AS [საბანკო ანგარიში სალარო (ფულადი სახსრები,დაგრ. რეგისტრი)],
	[ვალუტა] AS [%lnk_ვალუტა (ფულადი სახსრები,დაგრ. რეგისტრი)], //Type: СправочникВалюты,
	ApplyMap('MapСправочникВалюты',[ვალუტა],Null()) AS [ვალუტა (ფულადი სახსრები,დაგრ. რეგისტრი)],
    If([ВидДвижения] = 1, -1, 1) * [თანხა] AS [თანხა (ფულადი სახსრები,დაგრ. რეგისტრი)],
	If([ВидДвижения] = 1, -1, 1) * [თანხა ვალუტა] AS [თანხა ვალ. (ფულადი სახსრები,დაგრ. რეგისტრი)],
    If([ВидДвижения] = 1, -1, 1) * [თანხა ვალუტა] * ApplyMap('MapКурсыВалют',[ვალუტა],1) AS [თანხა ექვ. (ფულადი სახსრები,დაგრ. რეგისტრი)],
	Null() AS [თანხა (ფულადი სახსრები,დაგრ. რეგისტრი, ნაშთი)],
	Null() AS [თანხა ვალ. (ფულადი სახსრები,დაგრ. რეგისტრი, ნაშთი)],
    Null() AS [თანხა ექვ. (ფულადი სახსრები,დაგრ. რეგისტრი, ნაშთი)],
	[გატარების შინაარსი] AS [გატარების შინაარსი (ფულადი სახსრები,დაგრ. რეგისტრი)],
	[მუხლი] AS [%lnk_მუხლი (ფულადი სახსრები,დაგრ. რეგისტრი)], //Type: СправочникСтатьиДвиженияДенежныхСредств,
	ApplyMap('MapСправочникСтатьиДвиженияДенежныхСредств',[მუხლი],Null()) AS [მუხლი (ფულადი სახსრები,დაგრ. რეგისტრი)],
	ApplyMap('MapГруппаСтатьи',[მუხლი],Null())  AS [მუხლის ჯგუფი (ფულადი სახსრები,დაგრ. რეგისტრი)], //Type: СправочникСтатьиДвиженияДенежныхСредств,
	ApplyMap('MapКонсолидированныеСтатьиДвиженияДенежныхСредств',[მუხლი],[მუხლი])  AS [%lnk_მუხლი კონსოლიდირებული (ფულადი სახსრები,დაგრ. რეგისტრი)], //Type: СправочникСтатьиДвиженияДенежныхСредств,
    ApplyMap('MapСправочникСтатьиДвиженияДенежныхСредств',ApplyMap('MapКонсолидированныеСтатьиДвиженияДенежныхСредств',[მუხლი],[მუხლი]),Null()) AS [მუხლი კონსოლიდირებული (ფულადი სახსრები,დაგრ. რეგისტრი)],
    ApplyMap('MapГруппаСтатьи',ApplyMap('MapКонсолидированныеСтатьиДвиженияДенежныхСредств',[მუხლი],[მუხლი]),Null())  AS [კონსოლიდირებული მუხლის ჯგუფი (ფულადი სახსრები,დაგრ. რეგისტრი)] //Type: СправочникСтатьиДвиженияДенежныхСредств
Resident РегистрНакопленияДенежныеСредстваPre;

Drop Table РегистрНакопленияДенежныеСредстваPre;


РегистрНакопленияРасчетыПоКредитамИЗаймамPre:
LOAD
    *
FROM [lib://$(vSpace):DataFiles/Elvare_$(vPrefix)_РегистрНакопленияРасчетыПоКредитамИЗаймам-*.qvd]
(qvd);

РегистрНакопленияРасчетыПоКредитамИЗаймамОстатки:
LOAD
	floor(Date(AddYears([Период],-2000),'DD/MM/YYYY HH:mm:ss')) AS LoanDateOst,
	[ორგანიზაცია] & '|' & ApplyMap('MapДокументДоговорКредитаИЗаймаВалютаСсылка',[საკრედიტო ხელშეკრულება (სესხი)],Null()) & '|' & floor(Date(AddYears([Период],-2000),'DD/MM/YYYY HH:mm:ss')) & '|' & 1 as [ორგანიზაცია_ვალუტა_პერიოდი_ნაშთია],
    1 as [ნაშთია (ანგარიში სესხებით და კრედიტებით,დაგრ. რეგისტრი)],
	Date(AddYears([Период],-2000),'DD/MM/YYYY HH:mm:ss') AS [პერიოდი (ანგარიში სესხებით და კრედიტებით,დაგრ. რეგისტრი)],
	[Регистратор] AS [%lnk_რეგისტრატორი (ანგარიში სესხებით და კრედიტებით,დაგრ. რეგისტრი)], //Type: ДокументКорректировкаРегистров,ДокументРасходСоСчета,ДокументПоступлениеВКассу,ДокументНачисленияПоКредитамИЗаймам,ДокументНачислениеЗарплаты,ДокументРасходИзКассы,ДокументЗакрытиеМесяца,ДокументПоступлениеНаСчет,ДокументВводНачальныхОстатков,
	[ВидДвижения] AS [მოძრაობის ტიპი (ანგარიში სესხებით და კრედიტებით,დაგრ. რეგისტრი)],
	[კონტრაგენტი] AS [%lnk_კონტრაგენტი (ანგარიში სესხებით და კრედიტებით,დაგრ. რეგისტრი)], //Type: СправочникКонтрагенты,СправочникСотрудники,
	IF([კონტრაგენტი_TYPE] = 'СправочникКонтрагенты', ApplyMap('MapСправочникКонтрагенты',[კონტრაგენტი],Null()),
		[კონტრაგენტი]) AS [კონტრაგენტი (ანგარიში სესხებით და კრედიტებით,დაგრ. რეგისტრი)],
	[ორგანიზაცია] AS [%lnk_ორგანიზაცია (ანგარიში სესხებით და კრედიტებით,დაგრ. რეგისტრი)], //Type: СправочникОрганизации,
	ApplyMap('MapСправочникОрганизации',[ორგანიზაცია],Null()) AS [ორგანიზაცია (ანგარიში სესხებით და კრედიტებით,დაგრ. რეგისტრი)],
	[საკრედიტო ხელშეკრულება (სესხი)] AS [%lnk_საკრედიტო ხელშეკრულება (სესხი) (ანგარიში სესხებით და კრედიტებით,დაგრ. რეგისტრი)], //Type: ДокументДоговорКредитаИЗайма,
	ApplyMap('MapДокументДоговорКредитаИЗаймаВалютаСсылка',[საკრედიტო ხელშეკრულება (სესხი)],Null()) AS [%lnk_ვალუტა (ანგარიში სესხებით და კრედიტებით,დაგრ. რეგისტრი)], //Type: ДокументДоговорКредитаИЗайма,
	ApplyMap('MapДокументДоговорКредитаИЗаймаЭтоКредитнаяЛиния',[საკრედიტო ხელშეკრულება (სესხი)],Null()) AS [საკრედიტო ხაზი (ანგარიში სესხებით და კრედიტებით,დაგრ. რეგისტრი)], //Type: ДокументДоговорКредитаИЗайма,
	If([ВидДвижения] = 1, -1, 1) * [ძირითადი დავალიანება] AS [ძირითადი დავალიანება (ანგარიში სესხებით და კრედიტებით,დაგრ. რეგისტრი, ნაშთი)],
	If([ВидДвижения] = 1, -1, 1) * [Основной долг вал] AS [ძირითადი დავალიანება ვალ. (ანგარიში სესხებით და კრედიტებით,დაგრ. რეგისტრი, ნაშთი)],
    If([ВидДвижения] = 1, -1, 1) * [Основной долг вал] * ApplyMap('MapКурсыВалют',ApplyMap('MapДокументДоговорКредитаИЗаймаВалютаСсылка',[საკრედიტო ხელშეკრულება (სესხი)],Null()),1) AS [ძირითადი დავალიანება ექვ. (ანგარიში სესხებით და კრედიტებით,დაგრ. რეგისტრი, ნაშთი)],
    If([ВидДвижения] = 1, -1, 1) * [პროცენტები] AS [პროცენტები (ანგარიში სესხებით და კრედიტებით,დაგრ. რეგისტრი, ნაშთი)],
	If([ВидДвижения] = 1, -1, 1) * [Проценты вал] AS [პროცენტები ვალ. (ანგარიში სესხებით და კრედიტებით,დაგრ. რეგისტრი, ნაშთი)],
    If([ВидДвижения] = 1, -1, 1) * [Проценты вал] * ApplyMap('MapКурсыВалют',ApplyMap('MapДокументДоговорКредитаИЗаймаВалютаСсылка',[საკრედიტო ხელშეკრულება (სესხი)],Null()),1) AS [პროცენტები ექვ. (ანგარიში სესხებით და კრედიტებით,დაგრ. რეგისტრი, ნაშთი)],
    If([ВидДвижения] = 1, -1, 1) * [კომისია] AS [კომისია (ანგარიში სესხებით და კრედიტებით,დაგრ. რეგისტრი, ნაშთი)],
	If([ВидДвижения] = 1, -1, 1) * [Комиссия вал] AS [კომისია ვალ. (ანგარიში სესხებით და კრედიტებით,დაგრ. რეგისტრი, ნაშთი)],
    If([ВидДвижения] = 1, -1, 1) * [Комиссия вал] * ApplyMap('MapКурсыВалют',ApplyMap('MapДокументДоговорКредитаИЗаймаВалютаСсылка',[საკრედიტო ხელშეკრულება (სესხი)],Null()),1) AS [კომისია ექვ. (ფულადი სახსრები,დაგრ. რეგისტრი, ნაშთი)]
Resident РегистрНакопленияРасчетыПоКредитамИЗаймамPre;

Drop Table РегистрНакопленияРасчетыПоКредитамИЗаймамPre;

ДокументДоговорКредитаИЗайма:
LOAD
	[Ссылка] AS [%lnk_მინიშნება (საკრედიტო ხელშეკრულება (სესხი),დოკუმენტი)], //Type: ДокументДоговорКредитаИЗайма,
    [ორგანიზაცია] & '|' & [ანგარიშისწორების ვალუტა] AS [ორგანიზაცია_ვალუტა],
	[დოკუმენტის თანხა] AS [დოკუმენტის თანხა ვალ. (საკრედიტო ხელშეკრულება (სესხი),დოკუმენტი)],
	[დოკუმენტის თანხა] * ApplyMap('MapКурсыВалют',[ანგარიშისწორების ვალუტა],1) AS [დოკუმენტის თანხა ექვ. (საკრედიტო ხელშეკრულება (სესხი),დოკუმენტი)],
	[Номер] AS [ნომერი (საკრედიტო ხელშეკრულება (სესხი),დოკუმენტი)],
	[საკრედიტო ხაზი] AS [საკრედიტო ხაზი (საკრედიტო ხელშეკრულება (სესხი),დოკუმენტი)],
	[ოვერდრაფტი] AS [ოვერდრაფტი (საკრედიტო ხელშეკრულება (სესხი),დოკუმენტი)],
	if([საკრედიტო ხაზი] or [ოვერდრაფტი], true(), false()) AS [საკრედიტო ხაზი / ოვერდრაფტი (საკრედიტო ხელშეკრულება (სესხი),დოკუმენტი)],
	[ორგანიზაცია] AS [%lnk_ორგანიზაცია (საკრედიტო ხელშეკრულება (სესხი),დოკუმენტი)], //Type: СправочникОрганизации,
	ApplyMap('MapСправочникОрганизации',[ორგანიზაცია],Null()) AS [ორგანიზაცია (საკრედიტო ხელშეკრულება (სესხი),დოკუმენტი)],
	[ანგარიშისწორების ვალუტა] AS [%lnk_ანგარიშისწორების ვალუტა (საკრედიტო ხელშეკრულება (სესხი),დოკუმენტი)], //Type: СправочникВалюты,
	ApplyMap('MapСправочникВалюты',[ანგარიშისწორების ვალუტა],Null()) AS [ანგარიშისწორების ვალუტა (საკრედიტო ხელშეკრულება (სესხი),დოკუმენტი)];
LOAD
    *
FROM [lib://$(vSpace):DataFiles/Elvare_$(vPrefix)_ДокументДоговорКредитаИЗайма.qvd]
(qvd);
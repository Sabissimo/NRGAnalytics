





СправочникГруппыСкладовОстатковДляУровнейПополненияЗапасовСклады:
LOAD
	[Ссылка] AS [%lnk_ნაშთების საწყობები (TopUpLevel)], //Type: СправочникГруппыСкладовОстатковДляУровнейПополненияЗапасов,
	[საწყობი] AS [%lnk_საწყობი (Top-Up Level-ების ნაშთების საწყობების ჯგუფები,ცნობარი)];
LOAD
    *
FROM [lib://$(vSpace):DataFiles/$(vSpacePrefix)_$(vPrefix)_СправочникГруппыСкладовОстатковДляУровнейПополненияЗапасовСклады.qvd]
(qvd);


РегистрСведенийМинимальныеТочкиЗаказовСрезПоследнихPre:
LOAD
    *
FROM [lib://$(vSpace):DataFiles/$(vSpacePrefix)_$(vPrefix)_РегистрСведенийМинимальныеТочкиЗаказовСрезПоследних-*.qvd]
(qvd);

WarehouseFilter:
LOAD DISTINCT 
    [საწყობი++] & '|' & [ნომენკლატურა] AS [საწყობი_ნომენკლატურა],
    ApplyMap('MapСправочникСтруктурныеЕдиницы',[საწყობი++], Null()) as [საწყობი (დეფიციტების ფილტრი)]
Resident РегистрСведенийМинимальныеТочкиЗаказовСрезПоследнихPre
where 
false() and
[აქტიური] = '01';

Drop Table РегистрСведенийМинимальныеТочкиЗаказовСрезПоследнихPre;

РегистрСведенийУровниПополненияЗапасовСрезПоследнихPre:
LOAD
    *
FROM [lib://$(vSpace):DataFiles/$(vSpacePrefix)_$(vPrefix)_РегистрСведенийУровниПополненияЗапасовСрезПоследних-*.qvd]
(qvd);

WarehouseFilter:
LOAD DISTINCT 
    [საწყობი] & '|' & [ნომენკლატურა] AS [საწყობი_ნომენკლატურა],
    ApplyMap('MapСправочникСтруктурныеЕдиницы',[საწყობი], Null()) as [საწყობი (დეფიციტების ფილტრი)]
Resident РегистрСведенийУровниПополненияЗапасовСрезПоследнихPre
where 
true() and
[აქტიური] = '01';

// TopUpLevel:
// LOAD
// 	[საწყობი] & '|' & [ნომენკლატურა] AS [საწყობი_ნომენკლატურა], 
// 	[Top-Up Level] * ApplyMap('MapСправочникЕдиницыИзмеренияКоэффициент', [ერთეული], 1) AS [Top-Up Level  (მარაგები)]
// Resident РегистрСведенийУровниПополненияЗапасовСрезПоследнихPre
// where 
// [აქტიური] = '01';

TopUpLevelTmp:
LOAD
	[საწყობი] as [%lnk_საწყობი (TopUpLevel)], 
    [ნაშთების საწყობები] as [%lnk_ნაშთების საწყობები (TopUpLevel)], 
    [ნომენკლატურა] as [%lnk_ნომენკლატურა (TopUpLevel)], 
	[Top-Up Level] * ApplyMap('MapСправочникЕдиницыИзмеренияКоэффициент', [ერთეული], 1) AS [Top-Up Level  (TopUpLevel)]
Resident РегистрСведенийУровниПополненияЗапасовСрезПоследнихPre
where 
[აქტიური] = '01';

Drop Table РегистрСведенийУровниПополненияЗапасовСрезПоследнихPre;

Left Join (TopUpLevelTmp)
Load
	*
Resident СправочникГруппыСкладовОстатковДляУровнейПополненияЗапасовСклады;

TopUpLevel:
Load
	if([%lnk_ნაშთების საწყობები (TopUpLevel)] = '00000000000000000000000000000000',[%lnk_საწყობი (TopUpLevel)],[%lnk_საწყობი (Top-Up Level-ების ნაშთების საწყობების ჯგუფები,ცნობარი)]) & '|' & [%lnk_ნომენკლატურა (TopUpLevel)] AS [საწყობი_ნომენკლატურა], 
	if([%lnk_ნაშთების საწყობები (TopUpLevel)] = '00000000000000000000000000000000',ApplyMap('MapСправочникСтруктурныеЕдиницы',[%lnk_საწყობი (TopUpLevel)]),ApplyMap('MapСправочникГруппыСкладовОстатковДляУровнейПополненияЗапасов',[%lnk_ნაშთების საწყობები (TopUpLevel)])) as [ნაშთების საწყობი (TopUpLevel)], 
    [Top-Up Level  (TopUpLevel)] as [Top-Up Level  (მარაგები)]
Resident TopUpLevelTmp;

Drop Table TopUpLevelTmp;

Drop Table СправочникГруппыСкладовОстатковДляУровнейПополненияЗапасовСклады;


// СправочникГруппыСкладовОстатковДляУровнейПополненияЗапасовСклады:
// LOAD
// 	[Ссылка] AS [%lnk_ნაშთების საწყობები], //Type: СправочникГруппыСкладовОстатковДляУровнейПополненияЗапасов,
// 	ApplyMap('MapСправочникГруппыСкладовОстатковДляУровнейПополненияЗапасов',[Ссылка],Null()) AS [Ссылка],
// 	[საწყობი] AS [%lnk_საწყობი (BridgeTableOrgItemDate)], //Type: СправочникСтруктурныеЕдиницы,
// 	ApplyMap('MapСправочникСтруктурныеЕдиницы',[საწყობი],Null()) AS [საწყობი];
// LOAD
//     *
// FROM [lib://$(vSpace):DataFiles/$(vSpacePrefix)_$(vPrefix)_СправочникГруппыСкладовОстатковДляУровнейПополненияЗапасовСклады.qvd]
// (qvd);
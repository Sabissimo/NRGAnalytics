ТипЗапасыTMP:
LOAD * Inline [
'აღრიცხვის ანგარიშის ტიპიTemp'
'მარაგები'
];

РегистрНакопленияЗапасыPre:
LOAD
    *
FROM [lib://$(vSpace):DataFiles/NRG_$(vPrefix)_РегистрНакопленияЗапасы-*.qvd]
(qvd)
WHERE Exists([აღრიცხვის ანგარიშის ტიპიTemp],ApplyMap('MapПланСчетовУправленческийТипСчета',[აღრიცხვის ანგარიში],Null()));

Drop Table ТипЗапасыTMP;

РегистрНакопленияЗапасы:
LOAD
	floor(Date(AddYears([Период],-2000),'DD/MM/YYYY HH:mm:ss')) AS InventoryDate,
	Date(AddYears([Период],-2000),'DD/MM/YYYY HH:mm:ss') AS [პერიოდი (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	[Регистратор] AS [%lnk_რეგისტრატორი (მარაგები და დანახარჯები,დაგრ. რეგისტრი)], //Type: ДокументСписаниеЗапасов,ДокументКорректировкаРегистров,ДокументПередачаВА,ДокументКорректировкаРеализации,ДокументРасходнаяНакладная,ДокументОтчетКомиссионера,ДокументПеремещениеЗапасов,ДокументПриходнаяНакладная,ДокументЧекККМВозврат,ДокументАмортизацияВА,ДокументПереоценкаВалютныхСредств,ДокументАктВыполненныхРабот,ДокументНачислениеНалогов,ДокументРасходСоСчета,ДокументЧекККМ,ДокументОтчетОПереработке,ДокументПринятиеКУчетуВА,ДокументПрочиеРасходы,ДокументРезервированиеЗапасов,ДокументМаркировкаТоваровГИСМ,ДокументАвансовыйОтчет,ДокументЗаказПокупателя,ДокументКорректировкаПоступления,ДокументЗаказНаПроизводство,ДокументНачисленияПоКредитамИЗаймам,ДокументСборкаЗапасов,ДокументВыполнениеЗаказаУслуг,ДокументРаспределениеЗатрат,ДокументНачислениеЗарплаты,ДокументОтчетОРозничныхПродажах,ДокументОтчетПереработчика,ДокументРасходИзКассы,ДокументЗаказПоставщику,ДокументЗакрытиеМесяца,ДокументРасходыПриИмпорте,ДокументПоступлениеНаСчет,ДокументВводНачальныхОстатков,ДокументСписаниеВА,ДокументСдельныйНаряд,ДокументДополнительныеРасходы,ДокументОприходованиеЗапасов,
	[ВидДвижения] AS [მოძრაობის ტიპი (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	[ორგანიზაცია] AS [%lnk_ორგანიზაცია (მარაგები და დანახარჯები,დაგრ. რეგისტრი)], //Type: СправочникОрганизации,
	ApplyMap('MapСправочникОрганизации',[ორგანიზაცია],Null()) AS [ორგანიზაცია (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	[სტრუქტურული ერთეული] AS [%lnk_სტრუქტურული ერთეული (მარაგები და დანახარჯები,დაგრ. რეგისტრი)], //Type: СправочникСтруктурныеЕдиницы,СправочникКонтрагенты,
	IF([სტრუქტურული ერთეული_TYPE] = 'СправочникСтруктурныеЕдиницы', ApplyMap('MapСправочникСтруктурныеЕдиницы',[სტრუქტურული ერთეული],Null()),
		IF([სტრუქტურული ერთეული_TYPE] = 'СправочникКонтрагенты', ApplyMap('MapСправочникКонтрагенты',[სტრუქტურული ერთეული],Null()),
		[სტრუქტურული ერთეული])) AS [სტრუქტურული ერთეული (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	[აღრიცხვის ანგარიში] AS [%lnk_აღრიცხვის ანგარიში (მარაგები და დანახარჯები,დაგრ. რეგისტრი)], //Type: ПланСчетовУправленческий,
	ApplyMap('MapПланСчетовУправленческий',[აღრიცხვის ანგარიში],Null()) AS [აღრიცხვის ანგარიში (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	[ნომენკლატურა] AS [%lnk_ნომენკლატურა (მარაგები და დანახარჯები,დაგრ. რეგისტრი)], //Type: СправочникНоменклатура,
	ApplyMap('MapСправочникНоменклатура',[ნომენკლატურა],Null()) AS [ნომენკლატურა (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	[მახასიათებელი] AS [%lnk_მახასიათებელი (მარაგები და დანახარჯები,დაგრ. რეგისტრი)], //Type: СправочникХарактеристикиНоменклатуры,
	ApplyMap('MapСправочникХарактеристикиНоменклатуры',[მახასიათებელი],Null()) AS [მახასიათებელი (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	[პარტია] AS [%lnk_პარტია (მარაგები და დანახარჯები,დაგრ. რეგისტრი)], //Type: СправочникПартииНоменклатуры,
	ApplyMap('MapСправочникПартииНоменклатуры',[პარტია],Null()) AS [პარტია (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	[მყიდველის შეკვეთა] AS [%lnk_მყიდველის შეკვეთა (მარაგები და დანახარჯები,დაგრ. რეგისტრი)], //Type: ДокументЗаказПокупателя,
	[რაოდენობა] AS [რაოდენობა (მარაგები და დანახარჯები,დაგრ. რეგისტრი)],
	[თანხა] AS [თანხა (მარაგები და დანახარჯები,დაგრ. რეგისტრი)]
Resident РегистрНакопленияЗапасыPre;

Drop Table РегистрНакопленияЗапасыPre;